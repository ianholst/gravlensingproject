(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    320203,       5933]
NotebookOptionsPosition[    317070,       5852]
NotebookOutlinePosition[    317436,       5868]
CellTagsIndexPosition[    317393,       5865]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{
   "Import", "[", "\"\<C:/Users/Ian/Desktop/gravlensingproject/data.csv\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theta", "=", 
   RowBox[{"data", "\[LeftDoubleBracket]", 
    RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ellipticity", "=", 
   RowBox[{"data", "\[LeftDoubleBracket]", 
    RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]ellipticity", "=", 
   RowBox[{"data", "\[LeftDoubleBracket]", 
    RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7334189570985293`*^9, 3.7334190484267187`*^9}, {
  3.733419379663094*^9, 3.733419402341899*^9}, {3.733424416767733*^9, 
  3.7334244188135295`*^9}, {3.733924453278283*^9, 
  3.7339244573133345`*^9}},ExpressionUUID->"592b968f-f867-4395-8522-\
b4d5258dec75"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H0", "=", 
   RowBox[{"69.32", 
    TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1],
      RowBox[{"\"km\"", "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", 
        "\"Mpc\"", "\[ThinSpace]", "\"s\"", "\[InvisibleSpace]", "\")\""}],
      "kilometers per megaparsec second",FractionBox["\"Kilometers\"", 
       RowBox[{"\"Megaparsecs\"", " ", "\"Seconds\""}]]},
     "Quantity"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]crit", "=", 
   RowBox[{"UnitConvert", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"3", 
       SuperscriptBox["H0", "2"]}], 
      RowBox[{"8", "\[Pi]", " ", 
       TemplateBox[{
        InterpretationBox["\[InvisibleSpace]", 1],StyleBox[
         "\"G\"", Italic, StripOnInput -> False],
         "Newtonian gravitational constants","\"GravitationalConstant\""},
        "Quantity"]}]], ",", "\"\<SI\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DL", "=", 
   RowBox[{"1", 
    TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1],"\"Gpc\"","gigaparsecs",
      "\"Gigaparsecs\""},
     "Quantity"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DS", "=", 
   RowBox[{"3", 
    TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1],"\"Gpc\"","gigaparsecs",
      "\"Gigaparsecs\""},
     "Quantity"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"criticalSurfaceDensity", "=", 
   RowBox[{"UnitConvert", "[", 
    RowBox[{
     RowBox[{
      FractionBox[
       SuperscriptBox[
        TemplateBox[{
         InterpretationBox["\[InvisibleSpace]", 1],StyleBox[
          "\"c\"", Italic, StripOnInput -> False],"speed of light in vacuum",
          "\"SpeedOfLight\""},
         "Quantity"], "2"], 
       RowBox[{"4", "\[Pi]", " ", 
        TemplateBox[{
         InterpretationBox["\[InvisibleSpace]", 1],StyleBox[
          "\"G\"", Italic, StripOnInput -> False],
          "Newtonian gravitational constants","\"GravitationalConstant\""},
         "Quantity"]}]], "*", 
      FractionBox["DS", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"DS", "-", "DL"}], ")"}], "*", "DL"}]]}], ",", 
     "\"\<SI\>\""}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7339229868221226`*^9, 
  3.733922987118971*^9}},ExpressionUUID->"f5bdf5c6-4cfe-421f-bd2d-\
54512922ba8b"],

Cell[CellGroupData[{

Cell["NFW Fit", "Section",
 CellChangeTimes->{{3.733423132489725*^9, 
  3.7334231379644136`*^9}},ExpressionUUID->"62366c01-2aaa-4f35-b2df-\
32dd4f11da81"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rs", "=", 
   RowBox[{"UnitConvert", "[", 
    RowBox[{
     RowBox[{
      FractionBox[
       SuperscriptBox["M200", 
        RowBox[{"1", "/", "3"}]], "c"], 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"3", 
          RowBox[{"(", 
           TemplateBox[{InterpretationBox["\[InvisibleSpace]", 1],SubscriptBox[
              StyleBox["\"M\"", Italic, StripOnInput -> False], "\"\[Sun]\""],
             "solar masses","\"SolarMass\""},
            "Quantity"], ")"}]}], 
         RowBox[{"800", "\[Pi]", " ", "\[Rho]crit"}]], ")"}], 
       RowBox[{"1", "/", "3"}]]}], ",", "\"\<SI\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]s", "=", 
   RowBox[{
    FractionBox["rs", "DL"], "*", 
    RowBox[{"QuantityMagnitude", "[", 
     RowBox[{
      TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1],"\"rad\"","radians",
        "\"Radians\""},
       "Quantity"], ",", 
      TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1],
        RowBox[{"\[InvisibleSpace]", "\"\\\"\""}],"arc seconds",
        "\"ArcSeconds\""},
       "QuantityPostfix"]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]c", "=", 
   RowBox[{
    FractionBox["200", "3"], "*", 
    FractionBox[
     SuperscriptBox["c", "3"], 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"1", "+", "c"}], "]"}], "-", 
      RowBox[{"c", "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", "c"}], ")"}]}]}]]}]}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQ3bK4Y9G7C68dn0i9Xwmi551YvglEZ++9cgtEl07g
uw+ihZT2gOlJ3rJ/QbRBTymYXpR6iP09SF3kWhEQvfN+owSIfsETJgWigx0y
5UB0o2WUAoiepGikDqLvBbFpgeisXydtQfTuBZ6OIPr7xf0BIDrlXnc4iJ6y
wCYeRPPYxSeCaCWfFRkgOqSRoxxE++gc+AyiP79rZvkApGfU3OIB0RJl0bwg
ukNDTBpE2162AdOzf8/LA9HTmPSLQPSv+9PLQLTdwscVIFomdvPUBxeB/vp1
Zx6Y9tK79BBIn1RIvQqi9X60Vz4C0iIG68A0AMu5wm8=
  "],ExpressionUUID->"e013f2d9-86b9-42f5-a5dd-af3f4ebc30b1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NFWsurfaceDensity", "=", 
   RowBox[{
    FractionBox[
     RowBox[{"2", "\[Delta]c", "*", "\[Rho]crit", "*", "rs", " "}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[Theta]", "/", "\[Theta]s"}], ")"}], "2"], "-", "1"}]], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       FractionBox["2", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Theta]", "/", "\[Theta]s"}], ")"}], "2"], "-", "1"}]]], 
       RowBox[{"ArcTan", "[", 
        SqrtBox[
         FractionBox[
          RowBox[{
           RowBox[{"\[Theta]", "/", "\[Theta]s"}], "-", "1"}], 
          RowBox[{
           RowBox[{"\[Theta]", "/", "\[Theta]s"}], "+", "1"}]]], "]"}]}]}], 
     ")"}]}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NFWaverageSurfaceDensity", "=", 
   RowBox[{
    FractionBox[
     RowBox[{"4", "\[Delta]c", "*", "\[Rho]crit", "*", "rs", " "}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[Theta]", "/", "\[Theta]s"}], ")"}], "2"]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["2", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Theta]", "/", "\[Theta]s"}], ")"}], "2"], "-", "1"}]]], 
       RowBox[{"ArcTan", "[", 
        SqrtBox[
         FractionBox[
          RowBox[{
           RowBox[{"\[Theta]", "/", "\[Theta]s"}], "-", "1"}], 
          RowBox[{
           RowBox[{"\[Theta]", "/", "\[Theta]s"}], "+", "1"}]]], "]"}]}], "+", 
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{"\[Theta]", "/", "\[Theta]s"}], "2"], "]"}]}], ")"}]}]}], " ",
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NFWconvergence", "=", 
   FractionBox["NFWsurfaceDensity", "criticalSurfaceDensity"]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NFWshear", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Expand", "[", 
     FractionBox[
      RowBox[{"NFWaverageSurfaceDensity", "-", "NFWsurfaceDensity"}], 
      "criticalSurfaceDensity"], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NFWreducedShear", "=", 
   FractionBox["NFWshear", 
    RowBox[{"1", "-", "NFWconvergence"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NFWellipticity", "=", 
   FractionBox[
    RowBox[{"2", "*", "NFWreducedShear"}], 
    RowBox[{"1", "+", 
     SuperscriptBox["NFWreducedShear", "2"]}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7334211077993035`*^9, 3.7334211232701287`*^9}, {
  3.7334212191064367`*^9, 3.733421230259823*^9}, {3.733422127396689*^9, 
  3.7334221569343824`*^9}, {3.7334222867077336`*^9, 3.733422322046705*^9}, {
  3.7334223541180058`*^9, 3.7334225626703176`*^9}, {3.733422763036334*^9, 
  3.733422765744194*^9}, {3.7334229221667213`*^9, 3.7334229264067273`*^9}, {
  3.733922986018135*^9, 
  3.733923029648033*^9}},ExpressionUUID->"5d6bf19f-594d-4487-9bf8-\
a12e7ef01b9b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NFWchiSquared", "=", 
   RowBox[{"Total", "[", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"ellipticity", "-", 
        RowBox[{"Re", "[", 
         RowBox[{"(", 
          RowBox[{"NFWellipticity", "/.", 
           RowBox[{"\[Theta]", "\[Rule]", "theta"}]}], ")"}], "]"}]}], 
       "\[Sigma]ellipticity"], ")"}], "2"], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.73342147726383*^9, 3.7334215504695716`*^9}, 
   3.7334227326427402`*^9, {3.733915106982624*^9, 3.7339151154670935`*^9}, {
   3.7339153268217325`*^9, 3.7339153347124467`*^9}, {3.733915820498337*^9, 
   3.7339158363034973`*^9}, {3.733917582524537*^9, 3.733917584394153*^9}, 
   3.733923040241027*^9, {3.7339231975011272`*^9, 3.733923197817625*^9}, {
   3.7339250219025216`*^9, 
   3.7339250352915773`*^9}},ExpressionUUID->"cc6b621e-3afe-4629-a66d-\
8158df5b2b82"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NFWchiSquared", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"M200", "\[Rule]", 
     SuperscriptBox["10", "15"]}], ",", 
    RowBox[{"c", "\[Rule]", "10"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.733925453765114*^9, 
  3.733925472926691*^9}},ExpressionUUID->"a89eecea-1ec4-4dbb-8afc-\
13be35d03568"],

Cell[BoxData["39.191380193743754`"], "Output",
 CellChangeTimes->{3.7339254734291997`*^9, 
  3.7340013643442554`*^9},ExpressionUUID->"0aa72ac5-9834-42e7-bbbe-\
64f9961e9dfb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NFWfit", "=", 
  RowBox[{"NMinimize", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NFWchiSquared", "/.", 
       RowBox[{"M200", "\[Rule]", 
        SuperscriptBox["10", "logM200"]}]}], ",", 
      RowBox[{"10", "<", "logM200", "<", "20"}], ",", 
      RowBox[{"0", "<", "c", "<", "50"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"logM200", ",", "c"}], "}"}], ",", 
    RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", 
    RowBox[{"WorkingPrecision", "\[Rule]", "10"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7339216457194247`*^9, 3.733921647659586*^9}, {
   3.733923155140298*^9, 3.7339231554686747`*^9}, 3.7339232018491235`*^9, {
   3.7339232656117425`*^9, 3.7339232659554987`*^9}, {3.7339255163441973`*^9, 
   3.7339255187200766`*^9}, {3.733925558624979*^9, 3.733925662694852*^9}, {
   3.7339257291331463`*^9, 
   3.7339257318988123`*^9}},ExpressionUUID->"39df82b3-c5c7-456e-92d5-\
fd7688fc42a9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"38.0611761963969570388`10.", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"logM200", "\[Rule]", "14.9865710309299845311`10."}], ",", 
     RowBox[{"c", "\[Rule]", "10.1650161702069623927`10."}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.733921644391219*^9, 3.73392165404167*^9}, 
   3.7339230482734632`*^9, 3.7339231612392993`*^9, 3.7339232206141133`*^9, 
   3.73392336774781*^9, 3.733925522599108*^9, {3.7339255612204504`*^9, 
   3.733925678531622*^9}, {3.7339257337525787`*^9, 3.733925745564315*^9}, 
   3.734001368076103*^9},ExpressionUUID->"7dc592cc-79a8-4b28-8b16-\
120a362c140c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"NFWlogchiSquared2D", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"logM200", ",", "c", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"10", ",", 
           RowBox[{"NFWchiSquared", "/.", 
            RowBox[{"{", 
             RowBox[{"M200", "\[Rule]", 
              SuperscriptBox["10", "logM200"]}], "}"}]}]}], "]"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"logM200", ",", "14.7", ",", "15.3", ",", ".01"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", ".1", ",", "20", ",", ".5"}], "}"}]}], "]"}], ",", 
     "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7339166696605473`*^9, 3.733916777507247*^9}, {
   3.733916834803506*^9, 3.7339168613317766`*^9}, {3.7339169438353333`*^9, 
   3.733916969739814*^9}, {3.733917012549602*^9, 3.7339170378708787`*^9}, {
   3.733917072352238*^9, 3.7339170809086957`*^9}, {3.7339171452366066`*^9, 
   3.733917269030781*^9}, {3.733917455568344*^9, 3.7339175041065865`*^9}, {
   3.7339176888954935`*^9, 3.7339177017198095`*^9}, {3.733917742859766*^9, 
   3.7339178468491263`*^9}, {3.7339180359614334`*^9, 
   3.7339180366778336`*^9}, {3.733918189068511*^9, 3.733918193544628*^9}, {
   3.733918240434667*^9, 3.7339182484272013`*^9}, {3.733918380683181*^9, 
   3.7339184102220855`*^9}, {3.733918440974614*^9, 3.733918453512727*^9}, {
   3.7339184846490183`*^9, 3.7339184951403317`*^9}, {3.7339186224506173`*^9, 
   3.733918655499171*^9}, {3.7339186873353186`*^9, 3.733918782588296*^9}, {
   3.7339189522252183`*^9, 3.7339189541313725`*^9}, {3.733918988532618*^9, 
   3.733918995199665*^9}, {3.7339190567421827`*^9, 3.733919122467949*^9}, {
   3.7339191751415854`*^9, 3.7339191784299765`*^9}, {3.733919215248884*^9, 
   3.7339193357060447`*^9}, {3.733919420824418*^9, 3.7339195153571615`*^9}, {
   3.7339196612040124`*^9, 3.7339196621573963`*^9}, {3.733919719551648*^9, 
   3.733919734578854*^9}, {3.73391979113148*^9, 3.733919845194385*^9}, {
   3.733919953212509*^9, 3.733919954578019*^9}, {3.7339208680780315`*^9, 
   3.733920900448841*^9}, {3.733920942512059*^9, 3.7339209564673595`*^9}, {
   3.7339209952022877`*^9, 3.733920998485926*^9}, {3.7339210465114236`*^9, 
   3.7339210544310355`*^9}, 3.7339210979720445`*^9, {3.7339211424323635`*^9, 
   3.7339211571271553`*^9}, 3.7339213707762384`*^9, {3.733921440568633*^9, 
   3.7339214738535843`*^9}, {3.733921896101028*^9, 3.7339218964135456`*^9}, {
   3.7339222014462495`*^9, 3.7339222164847116`*^9}, {3.7339226022557974`*^9, 
   3.733922611298519*^9}, {3.7339232036627398`*^9, 3.7339232531959715`*^9}, {
   3.733923405083048*^9, 3.7339234167999325`*^9}, {3.733925932695816*^9, 
   3.7339259646163473`*^9}, {3.734001381375855*^9, 3.7340013840337048`*^9}, {
   3.734004686918107*^9, 3.7340047832823005`*^9}, {3.734004864124029*^9, 
   3.7340048808932023`*^9}, {3.73400503180543*^9, 
   3.7340050524748917`*^9}},ExpressionUUID->"4df3c5f4-737f-4963-9498-\
b40e65e7bc21"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListDensityPlot", "[", 
    RowBox[{"NFWlogchiSquared2D", ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"ColorData", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<LightTemperatureMap\>\"", ",", "\"\<Reverse\>\""}], 
        "}"}], "]"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListContourPlot", "[", 
    RowBox[{"NFWlogchiSquared2D", ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"Contours", "\[Rule]", 
      RowBox[{"Log", "[", 
       RowBox[{"10", ",", 
        RowBox[{
         RowBox[{
         "NFWfit", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         "+", 
         RowBox[{"{", "1", "}"}]}]}], "]"}]}], ",", 
     RowBox[{"ContourShading", "\[Rule]", "None"}], ",", 
     RowBox[{"ContourStyle", "\[Rule]", "Dashed"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", 
      RowBox[{"Point", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"logM200", ",", "c"}], "}"}], "/.", 
        RowBox[{
        "NFWfit", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
       "]"}], ",", "Black", ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"15", ",", "10"}], "}"}], "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(log\), \
\(10\)]\)(\!\(\*FractionBox[SubscriptBox[\(M\), \(200\)], SubscriptBox[\(M\), \
\(\[Sun]\)]]\))\>\"", ",", "\"\<c\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.7339246495907526`*^9, {3.7339258302652855`*^9, 3.733925837778191*^9}, {
   3.733925935301738*^9, 3.73392593641113*^9}, {3.7339260601421137`*^9, 
   3.733926105446121*^9}, {3.7339261380257473`*^9, 3.7339261969615345`*^9}, {
   3.733926284116642*^9, 3.7339263336077385`*^9}, {3.7339278268019133`*^9, 
   3.733927889422551*^9}, 3.734001400185851*^9, {3.7340051339148903`*^9, 
   3.734005138419197*^9}},ExpressionUUID->"829c9167-102e-4232-ba52-\
208726cc983a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxd3S2sLdd9hnGrOpam1kiORqPR7K3RaM/Xnu+Z7mxiYnlkYmLiEBMTV2pI
QENCgkIiVSEhIS4oCSkKKUlBSUhJCopCSqJIJiYeYDBGnXt9/mvpfS45+uk1
uEvrAUdXXpriH//5J//0d++8886//P0777z5+dO3f+btX7968+c/PzI/3/75
20e67/Dh/D9/fvPnnU39Agdw6PzDzx/BERzDCZzCVziDc+cfznuDC7iEK7iG
G/gOt3AH9/AAj/AEz/ACr85v7/PyD+qv4MsDO3z5MXb48sT+3L757I/5r3/m
+zNbf7rv8OFs/alf4AAOnX/4e/0IjuAYTuAUvsIZnG963htcwCVcwTXcwHe4
hTu4hwd4hCd4hhd41fs/+9P7hc/+dIfP/nSHL+ztuf38w/f+8vuf+/7M1p/u
O3w4W3/qFziAQ2frTx3BMZzAKXyFMzjf9Lw3uIBLuIJruIHvcAt3cA8P8AhP
8Awv8Kr3f/an9wuf/ekOn/3pDl/Y23P7rvvit3/6he/PbP3pvsOHs/WnfoED
OHS2/tQRHMMJnMJXOIPzTc97gwu4hCu4hhv4DrdwB/fwAI/wBM/wAq96/2d/
er/w2Z/u8Nmf7vCFvT23X8Z/+OSvv/T9ma0/3Xf4cLb+1C9wAIfO1p86gmM4
gVP4Cmdwvul5b3ABl3AF13AD3+EW7uAeHuARnuAZXuBV7//sT+8XPvvTHT77
0x2+sLfn9s6bP7/y/ZmtP913+HC2/tQvcACHztafOoJjOIFT+ApncO5s/akL
uIQruIYb+A63cAf38ACP8ATP8AKvev9nf3q/8Nmf7vDZn+7whb09t1+//YXQ
92e2/nTf4cPZ+lO/wAEcOlt/6giO4QRO4Sucwfmm573BBVzCFVzDDXyHW7iD
e3iAR3iCZ3iBV73/sz+9X/jsT3f47E93+MLentub3wY//I3vz2z96b7Dh7P1
p36BAzh0tv7UERzDCZzCVziD803Pe4MLuIQruIYb+A63cAf38ACP8ATP8AKv
ev9nf3q/8Nmf7vDZn+7whb09t9/+6c1vhL4/s/Wn+w4fztaf+gUO4NDZ+lNH
cAwncApf4QzONz3vDS7gEq7gGm7gO9zCHdzDAzzCEzzDC7zq/Z/96f3CZ3+6
w2d/usMX9vbc3v46+Dvfn9n6032HD2frT/0CB3DobP2pIziGEziFr3AG55ue
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
2dtz+3/1pZna
      "], {{{
         EdgeForm[], 
         GrayLevel[0.8], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNnXn8ldPXvz9nPp80UElkiKKUNNGkFGlS0iBpThIqkpIkGcs8ZVYyZUhU
hkIDCRWiEDJn9jXPkum5r2dd51V/7Nd99l5rr/fa+35f51S+v9+z94hxfU5L
l5WVda1aVpZJng2SsX8yepfFPO1aKdbQzzyzyTggGY2SkUvGwclokYzK5qat
xVrLZFRxznrKfQcmI5+MpslolowKPpsnYwefByWjormNk1FwDb1K9nKA/TSx
VrmarZKxYzI6JuOIZOyejDbJqJaMqn4+xHnbZLRLxs4+D01GDePEqiejtXvY
e7h1a6lDbKdktE9Gh2TUVLNTMvbw2TkZe/rskoy9knGYtXZzH/Nd1afWLp6b
sxXd1zUZtX12S8beyeiRjKOSsW8y+vgOz97uPeUcjbzz3ubxrrq7v24yjnRe
JxnjrX+691rBu21sL7yLvtZvaI/lxo5xva/vrqBuA3XJ72c/5B5rHmuDyuLd
D/Rd857xwHFq9C+L91/ZGB6r4rybZ9jHvMbWbm4NfDXA8xynRjPXWvkO8cxg
telluO+39J6rmtfS3CrW2ME7GmJ/gz1rX8871F6HeO5+nhm/4TW8d7waaOKB
XYzhhZrOT3I+yjz6GlYWfsNr+Lyt9fDtCWXh4xHJOFG9kWXhO/y7m7UONd6h
LDyIXkfr1XJ/G3s8zH3knewe+jqtLPx9qproV3MNv+N/PFzb+Rg1Rjvo6RTH
YdbmfdbxnXayBucc65mpgWfrmjdODXrB1/saO9X97OtmPdjp6rO299LWOzvd
GPVgaz9r8eyZjHrJONon84nJONPciWpPSEZ983ol4wzPM95Yd9fqb1dvSjLO
KQvf3GruLWXBM7E+jinm4G98jpdgDp4aGWfPXWXBQhPz8H1T53gRT+LXc8vC
k1PLgguYwdfT1CB+nrWmeQ9HefYB5jZ1/zGeAX4OstZgdZhf4J7zy4KLlvYx
zM+sXWgfF5h3nPrnWL+v+a3cMz8ZFyfjIscga7yajPuS8UoyZlh7uu+Yd41P
L7EW8UvLgivW8CGexIsjzIWBq8qClSutNURt1uAIxuChQ1mweoV6l5eFpw8z
dllZ8HSptUaaO9Iabd0zwlwY6WhP+BMfd7WHofZxjdpXJ+Na9VjD/3BYYoBn
iZ8jrHu985nuH+VZYamL+29wP7l480j7uFEN4uPsq4u16Ps6xyn2Ncq74b5g
oLu1blKPerd4zpvLgi28VvIc80nJmFUWLN3mOmtwNNHcHu4fZ+3b1IMt/I6v
8Xcv953lZ56Tk3F3WTD0Yln4bqr7Zifjdvs4y71oP2vtlWXBIPvxLB6Em3vL
wsf4GZbusSY555cFF8Tw/UDnEzxHd+vdY/40a9D/XOvco8a5rsEC7MHD/WrT
C77Dy/ze4N0h5l1o7kDPfbfneMD+7jd/sLXn2Svx53wfq8rC02gMT8ZD7oFR
fDzCGN4+wfmjzh8xj9oPloV38TCevsR6sLqgLHh9OBmL1FtYFn7FWyda6zLj
Ja7Qu9p6o9w/3R6vdB95j7mHvp4qC+8+qSb6Q13D23gan49xvkSNxQ56etxx
pbXxNz6HmWutwTmf8MzUwK/jzFuqBr3g59ONPel+9t1gvRKfY+1poXfHnS0z
Rj34Gm8tuMBnsPG02it8nxONPaM28ZXuf8Y8zrO8LLx/hnVh5Ez3P+8cj6xS
D1ZgZk5ZMHSHzznmv1AWjE3yOWe7OXUnb7fvpbJg9Key8GLpd+N/6nxlnLy7
HXy+x+fLfl7uPXJPMARLcAZbc12Dn/Ncv18d5uvMoRZcXGgfD/qZtVesuc68
uepO9hx3mn+Re9arwe8YHsWrsFQlFWf60vfK+8Wbr7v/tWS8URYssYb38CH+
21QWTLxtHn1tKAuvXm3ew9ZDD/9cqsZb6r1ZFj6mHpxstL83rLvQXHQuc/8G
3w1netR9MP9hWfj9g2R8VBZeZu1d895JxnvqsYbnYa/ke54w86v3+ota89Rb
5ju9Xp1rPOf73st7vvcbzdusBr0sdd9M+1vsvqdcu87+HvFe3/TuNrp2ueeH
kZvUWFkWnMDPZ2p/WhY+vc0YjMxy/ol9fGzeMte+Ng+PP2M9+PyiLBj9vCw8
gh4+gacSQ3Ocry4LJmer943zr92/wh7XlIU/yYeXn8vCv/gSf8LEneatNQ6L
u6bC76+Y87Q93uR5nvK+77Q++78tC/6/8fN39jrX93uv9X+xh/W+Z/rAz/h/
nvESZ3PsHY2dUnFnO6aix5890/PeDXfxmz3jqUqpuIuKqfA3PoerP9T+3ff9
sDE8sMD5P87/Nu9Va+Nj/Iy/X7ceff/pGbYk46+y0NtaFt7CT4ustdE4jC1U
7x3rPeL+Dfb4tvvI+9c99JVNhZczqfAVPsRbrOFz2MDzS5ynUqHx//+Ik4qe
/nO8be3NvlP4ec8anDOdijNTg/e+1LxcKjTo5RP1l9rTe+77yHql74Un7Gmr
d8ed5VMRo17BPayVq1dMBRdwggcrqEd8B8/PGn57QS98bu4KvQJLfO9Si3MW
XIPblWXBTOn3rbJ6eOcb6z2nh+AJTWp9ae6X1qA//L7aPvAvHnzF8ZseqpoK
Pbz8Q1lw830yqifznVPbanxvbGSy1jYZJ6i/wvddzf6ot1rtUp1vjbdOhU6r
VPC8WyqY+Z9n5fzMWYc5+KenH/28xvlu7j/M83JW7ggu1nsucmpZ50/fLzzs
kYqz756K9/6GMRjY6LxOKub7pCKPe6ulV/Etft1iPdjYKxV87Jk8906FXu1U
+Bg/v2Ut9IjD3Zvq/We9t93/uz3+4z7y6rqHvhqkwsv729funietz9/V87DH
vF4qNPZLxaCnfVMx/rF2Xp/j+5R8cc76nrmeLOBV8hqmQqOBHoYLYvTEfvbl
5KjEJM/3vZct3tkBqYg1lC84+lhP4y1Yaqz2ganwPCwRa6I28abub2Ie52mU
Cg6p8Yn84BH2H5yK+UHJaC63zVLBJl6ExYPUa65nv9anzayLZom3L/Q9/v9a
r+N55rDSTpZaqdHS+ffbccK8RjLapKJWa8+Q856qyyJ1W8p8i2Qckgq9Ntaj
xg/qVjf+o9zsIhP45he5Yq1mKp4/uL+FZ+OeDpezU/TZHnr0MGNwdpx339+1
jurs5buGDdZ2d/0IP3fUh3jyH/3/hxx3SwUrXdU43L2sbZVpePhbdruo1zkV
nqYesU6p6PkIa+G/Lj7/lGO4gBH6ODoVfu/pvef0aPdU6B2ZjB5qsIbnYa/k
e55lnmOD30fH+z6HW7tMPWrxvcBZj/IuqN3LWkfrgbx9cDbuiDP1VruXve5n
DZjM2FNDe2fOn0X4+9Msv4u4M+6xj3uod4xn7psKf+NzuOpnH8Tx/w7GYKOi
8ybmFt2PNrWPTQWT1MC3+L+K3sJjcDhAPXzUwjixgeoRP8hc9PBZY2sPsg9y
B5vHGj6Gu0NTwQaMwNVQNYakgo3qxuBlZ+eNPUfBvIOt3doafB8M8zxDfa+t
XDvBuiMcaB/vHRR8lzXsaxd7rJHa9v2wk3fU3jh5p6aTd5+MTun4/T3Rfdcm
85OTcU06PN5Jf1ym5qWp4HZ0KvjBP3uZc5rzU1PBInxQA0/j7TruY/91fh6T
CmbHms8c7+Knva3VyXiJMfSOtN4+9jHaOl3dR94499DXmanw8kTPz3lHuYbP
4QTP13N+hhrjHfR0uqOrtfE3PoeZHtbgnBM8MzXwa0PzJqlBL/j5AGMT3c++
XtYrsVrfnsZ4P5zxLGPUg59G1sK7jfXFFLXPToW3mxg7R23iU91/jnmcZ3Iq
uDrQuvDT1P3nOz8vGdPUOzcVbJR+985Tjzj+PtjYudZFE/aaWRcWWpiH71s6
x/Pwg+8vUuPCVHABM/j6YjWIT7fWxZ6hl/c0zNyW7ofpC1Lh5TbWGqEO80vc
MyMVXLSzj4XGFqSCgeHOZ9j3dOsO8J7w16HuH+jdcOYrPNvlybjHu787GVeq
R7xDKlg9yc88T/b9wwE84EM82dW9V6l5gznXu486o9wDS/AJD138PNNc/DXO
esQeSQXzi4yPNYd82H0qFczNdB1GjrSns7z/oz3nCGvdpPaNybhZPdbwPxyW
GOBZ4qe7dW9zfqv7T/WssNTT/bPcTy4e6G0fs9UgPsm+elqLvm9xnG5f13ku
zgcXfax1u3rUu8NzzkmFp/E2LN2pNnE8f6wxeOjv/Bxz+7p/krXvUo8aeBXP
4x38hK9gb656eOcC48TuVY/4eeaih7emWPs++yD3fvNYeygV3MxPhY/xMyzN
U+OBVPh8mDF8P9z5FM/Rx7zzrX2xNeDzQc8zT42LXMMTeAMWH1abXuAGz+Jd
/HOCeZeaO9wag72jBfZHja3JeD0Zf6aCpZHufysVDJP7mLFHHWg8oubVqeDm
8WQsTgVXeGFpKjgY5Rp5eBcPn+YasRPde6U6cINPT3XcaP47am5KBdtoXpMK
rpaqeY3rV7tG7GM/L7Oflanw7jPJ2Oj9veEa3sbT+PwM5yvsYbnjBmst8zM1
8Tc+h5mbrcE5n/bM1MCvk8x7Vg16wc9nGXvG/eybZb0SnxPs6WTPeW0yVhmj
HvxMthbexWew8YLaz6fC2+cYW6028TXuX20e53kuFVydbV34mer+l52/lIwX
1VubCjZKv3UvqUccf59vbK110YS9c60LCxeYh+8vdI7/Sr8br6rxSiq4gBl8
vV4N4hustd4zzPKeHjT3QvfD9Drf/3RrPawO89fd81oqOLjUPhb5mbU37ON1
8+apv86zvWz+Ze7B4/gdxvDy5ca+9+6/S8bb1oY/uLjKfZusRRx/w9qSZHyS
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
aj4G2jt5H0/6Ptj3fS7Y473snN9W7ztjPxjnM9+b/PmIP1etNfYj/kz2Pc77
y4eXf9MfrfOh2Sof3O6WD+8y+PyLz1r5bVzCwSt6daN+xW/rrblnPuZ7JM/d
85HPfjgp/e4RowfiW63xunnkowWHG6y7xX3M98pHDJ1988FBXZ9wAVeHeL9t
krG32rWT5z7q7S0LsPO2sS3W/tsanK1OPs7JvrrG6sgFLMDGfvngaV8ZgQti
9dQgnpKjEofvqJ2VF/bUz0eMfTl5+UA28ATzBmrvnw828DSxhmoTL8oIsQNk
lXi5jBBrpAbxCjJC7MB86BHfQa8Sa6we8Yr6nFgT9Rrrf3ghtr9n5kxN1Sa3
mXqsNVejmRz9Ty4PUqO53vxaRqvKy9fyRi4cHqw2+1rkg8uDfRKnp5b52EO8
ugzB6L++f3zTyj7IhSVYq6GPyP3Gte9lb5i5Q5PRVjapvUs+uKvhOmv48Ud5
3MXPPGsm4/BkHJaMU2RiD/lhbzvrHiFLHeVjd3Nr6+0t8vCHLB5uLjztpbeJ
dbROLTXJg+/j8/FdMNz54ebACbz8qZ9LvyGd86HXyfuo4Zlh42+/G0pMMu+a
j1675IMl4tRl/x6eD354H//IzH++n+75qHukfkrZR498aBDHb2ljR6rRzcEZ
0D9KDfbBScY9PfOhR/zofJyTNdiAEfjppTZx2Mgb6602cdgoGOujBnHYKBrr
mw8WicNDubFj1CMOGxWM9VOPOJzsYOxY9fpZL+t5YKaiefBQyXmJB+YD1Dgu
HzxUMTZQDeKDrDXQPHrtnw+/7+geeNnJeX/PSV/4qKqxIWoPzsd3cVXjfK7m
HDaqOx9s3+gPtT9q4Bt8jO+Gqw1/M5NxfTLGJOMEa41woIGv8eah+eCtvU/m
I/PB2AnmtHO9s1p7mnOiMZgYnd/GEJ7dw9HJ/MvUvDQfPI92X021O/i51Mto
867z8xjrn54Pz47ziYdrW7uNdzjWHthzqj2whv/hZR9jR1izizU422me81Q1
urgGA7AAJ+PzwQ+9wEM9Y2eoQbyHuSUO66oNJ/XdM8EY++Bkf2Ow0cD5mWpP
zAcbDY1NUps4bBxg7Cw1iMNGI2OT1SAOGwcaO1s94ni0sbEp6hHHw02MnaMe
cfzf1NhEz8yZpqpN7rnqsTZNDdbwMX6GpfPUII7PDzaGv1s4H2guHJ6vNvsu
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
3+atQb6PPp7nEuMzfPfML03G/wGFkL8b
            "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1: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
e83DxhW5PNrmGGRmkSDuEUj2Y86m2zqZvMecfZfr8nw55mzBKp8mP00WnP1s
nbce/Ut/UtwSjz3dv2Uh3nsJGxSOJdRMok+XcbovlRIj4K+a50jZG8xT9f29
g+jTpKNdN4x3saH22GzZUnsC2IIj1T/Qp6ZJq4XX/ceC7uRS1lr0w8uazIsU
9KNXTMP1KH8mSHqEX/HLRf58+4k+g3xr5FhTOFfOgJ1hrl9bsYc+Ldxzy72E
hBldbiOfWTo4mFAyN2O+sq8WXL7q++9zKoyjjdp06JmRSTmCfo79z9dpE3LF
xo27fCJjaXCr5Von5JOgZD03aY1zypPY6GXMosK3pCOei7gfUp84VG8cJyC3
aML1hQH60fdguDf6cVbg5n9K6Ee2yrqDSuhH/tfmHS/vIgd98goJTCRg74zG
mzC5MZgp2/MyEjlz5Nc8/xJ3AsIua2nbIWd2GPuMr71GwqqBZyrhRgT4JLe8
d5Uahe4lJTqvkRubfvx+REFuPHn6Sf9znK+ZEZblbsy1FG3jllzMtUd1PjqX
NSiw7Hh9hZgMCcUn7WcUHNngLn3cIL9xBLrP+Xy9LEiCjeDfVRpb2bBmTj1H
A3va0pFNj5fOI/fd3PIqsZsFBcuMrtZyjIBNg/otCo2AgVcS8oqPWOC8Or52
bcYwRDMemfztwJwWe8JVa45+/HP2HfvkMPz5rGGuiT5aJnd0hbIYCxoWkrcJ
Lw6BgtOCSALywdegjTInqExwz/ixx7h4CA59T76x6hkBRUV2l8aLmRCyZqj9
6pUh+CT9X7LfAwLqHamffgUw4eKDYgkV2SHIfjm27mcwcpf/aSNlMyZsnC78
4MAahNIH9RlGtwgYNY7kCVRggqDV3VRK0SBUcP+99OAa9tGIBbJuGRO6BB6s
cbo9CJXPXSqLbNGX37Zy9QwzIGSx/f3344OgZHrTLEf+B4zRKlyOvKWAzrlW
kaPRBEyHqB+7rjwIzRZFF5qeUcF1YgdFshVzb42gYcB/w6D1M2vTgyY6WMnz
qGziJKHCuFyuXIwCvY+/7DquzwSX+80S7+Uw13bS4yOqR+GV8Mrr3DkssOHU
Of3aCPPBjHuzpxoVzlT3P/35ATnUTCg1xwXn4NmGRclbNNBPn5vebYE8zBTw
LcY+I6gfpZCYTYcm67qu+1QC0gT3tRzD3Fzgip9yqWPA9P6+A0evIE+tDYxI
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
ZMHVKAoXJDZO6bwk+gudqFxNfNoucVuazVoKQQtKJk4c4GDhC2oH63U/LG6l
CBuR63e6kCgfc4Dwo1cI75mxPlA5zfTfdA48WdtsG34zEaimfrXmXheKPygP
zVHlwP7iL8OHcoOImZv6nDe3FRcdXXueRbGhYaPZ4nuB8Ld2+2m+c434kW93
q2c2G4fEYr303/TBNm33t6LWOjjdnZJY/x8L4peXheShGwOXg7/d/lwNeueC
PxV2hJNnpjPnvu+A+dTW5eKHK+HrKGs2bsjCz03BGflkjg3H80Zzb1egUvnC
up3WpD/mtMZq3O5A6TtLjd16lUjgr468GsLC0aXnpq+c7ULq0Ir59+ZW48dd
ltmBchZkFjbQXyr2QiM96ydvTC1WPxYLvirBxrW6LJl3yjSonzQbOb+rHrMc
nByee5Dr2reML2OADjsPySvVQw0IubTANPwrG6vC793M8h9A96V9yXYtTai1
vHdsdDkHgutEFNfWM3Ds3G3O07WtWC5ZlJt+ioNIIW/Z1yuGcMDw3ZDGkXZ4
vkh+1Pieg6yVbXo9dkz8XhpvOXKlEzlZViZC87jo5WbZ8IcO49a2X7MWhndj
aN3fqzeMuHgfZKIiEjiCKK49kxvQi2Orb/Rr+XOh1ZWS10P44tvVEM8uwjXa
ZwPVmp5yYdwyq+5RNQsqfUZaA9E0vN7IGo/p4EI+9XQ9w4UNBxmLq3XOdCyP
dvt7j5dCvr7zJqMp4jeXL8f5KfeDeVBzZK0qhVWlltoOVzh471RmQyoDqpUE
FOwJJz74IbKodC4XNYsTD5kmDuDTs11qJaQvStWf3CVmz8WtgpxMOUMGBq9n
j3Rc/PccoTMaTddI3y2SH5/Tx4BS0/FZG8ncyg5kvtucw4XAvMfmWWcGsU56
371u0i9v6eXUnWknfTPF1aloZhDth++9HUgh76uf9z59hgs5HeaX+qskT76V
t0bXdmMR19ajW3MQeW2y9ouz/z3/6QuP0F46MmWrrP0I/15qVqBbk7zf8+zJ
AlEjBlaeXSI1sZ2NnPRlx2NI7/xb6Ll4eh4Twlo2OUlruCjhhsl//nc/737R
NsHbIzh8XFbP0IqCW9Dl64aEd5/pZa6R57Jxf0x4kQjRr96Pli4nTS5KxY0q
jq2gUGW8KqaO9Fz1jUf6srxYqDv/tOXBJwo3O4bmHiO5+phv/8Xzj5h4v+9B
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
H60=
       "]], 
     GraphicsComplexBox[CompressedData["
1:eJxl3U3ILuddx/ETfaJjGE0chmHuYRjm/f2ld26ELAyZBjULgyVFjItIm2Ir
2EXTQlRiQ6tYkSItlIqcVmuxGxH6glVbQV1Eiwsj+LIoSl3UYFxEaAZM6cTa
Ouc5z/+6+H9zNocPvyzOxfVdPD30OpO94z1vfef33Lp169M/cOvWnd/fdf1r
Wj9x+86vv3hEfLn+9dIjet/g3fgfXrzz69aqfQU7sGt89/cHYA/24QAO4QiO
4cT47nlTOINzuIBLuIJruIFbuIN7eIBHeIJneDG+vs/Tm7Rvw6czdvj0IHb4
dMF+WV954svJh95t+xNLf3rf4N1Y+tO+gh3YNb7753oA9mAfDuAQjuAYTlZ9
3hTO4Bwu4BKu4Bpu4Bbu4B4e4BGe4Ble9P0f/en7hY/+9A4f/ekdPrG3y/rM
w/d99TPP2P7E0p/eN3g3lv60r2AHdo2lP20P9uEADuEIjuFk1edN4QzO4QIu
4Qqu4QZu4Q7u4QEe4Qme4UXf/9Gfvl/46E/v8NGf3uETe7usr7VPffSFZ21/
YulP7xu8G0t/2lewA7vG0p+2B/twAIdwBMdwsurzpnAG53ABl3AF13ADt3AH
9/AAj/AEz/Ci7//oT98vfPSnd/joT+/wib1d1uf8zz329edsf2LpT+8bvBtL
f9pXsAO7xtKftgf7cACHcATHcLLq86ZwBudwAZdwBddwA7dwB/fwAI/wBM/w
ou//6E/fL3z0p3f46E/v8Im9XdZbd3590PYnlv70vsG7sfSnfQU7sGss/Wl7
sA8HcAhHcAwnxtKfdgbncAGXcAXXcAO3cAf38ACP8ATP8KLv/+hP3y989Kd3
+OhP7/CJvV3WD13/QGj7E0t/et/g3Vj6076CHdg1lv60PdiHAziEIziGk1Wf
N4UzOIcLuIQruIYbuIU7uIcHeIQneIYXff9Hf/p+4aM/vcNHf3qHT+ztst75
afDhD9v+xNKf3jd4N5b+tK9gB3aNpT9tD/bhAA7hCI7hZNXnTeEMzuECLuEK
ruEGbuEO7uEBHuEJnuFF3//Rn75f+OhP7/DRn97hE3u7rB994c5PhLY/sfSn
9w3ejaU/7SvYgV1j6U/bg304gEM4gmM4WfV5UziDc7iAS7iCa7iBW7iDe3iA
R3iCZ3jR93/0p+8XPvrTO3z0p3f4xN4u6/WPgx+3/YmlP71v8G4s/WlfwQ7s
Gkt/2h7swwEcwhEcw8mqz5vCGZzDBVzCFVzDDdzCHdzDAzzCEzzDi77/oz99
v/DRn97hoz+9wyf2dlmvf7tt+xNLf3rf4N1Y+tO+gh3YNZb+tD3YhwM4hCM4
hhNj6U87g3O4gEu4gmu4gVu4g3t4gEd4gmd40fd/9KfvFz760zt89Kd3+MTe
Lmty5wfCT9n+xNKf3jd4N5b+tK9gB3aNpT9tD/bhAA7hCI7hZNXnTeEMzuEC
LuEKruEGbuEO7uEBHuEJnuFF3//Rn75f+OhP7/DRn97hE3u7rJ+5/gtp259Y
+tP7Bu/G0p/2FezArrH0p+3BPhzAIRzBMZys+rwpnME5XMAlXME13MAt3ME9
PMAjPMEzvOj7P/rT9wsf/ekdPvrTO3xib5e1e+r4ifCPbH9i6U/vG7wbS3/a
V7ADu8bSn7YH+3AAh3AEx3Cy6vOmcAbncAGXcAXXcAO3cAf38ACP8ATP8KLv
/+hP3y989Kd3+OhP7/CJvV3WOz8O+p+z/YmlP71v8G4s/WlfwQ7sGkt/2h7s
wwEcwhEcw8mqz5vCGZzDBVzCFVzDDdzCHdzDAzzCEzzDi77/oz99v/DRn97h
oz+9wyf2drn75/ii7U8s/el9g3dj6U/7CnZg11j60/ZgHw7gEI7gGE6MpT/t
DM7hAi7hCq7hBm7hDu7hAR7hCZ7hRd//0Z/ybfjoT+/w0Z/e4RN7u6xfvv6B
0PYnvvvne+kRvW/wbiz9aV/BDuwaS3/aHuzDARzCERzDyarPm8IZnMMFXMIV
XMMN3MId3MMDPMITPMOLvv+jP32/8NGf3uGjP73DJ/Z2Wa//7zB/ZfsTS396
3+DdWPrTvoId2DWW/rQ92IcDOIQjOIaTVZ83hTM4hwu4hCu4hhu4hTu4hwd4
hCd4hhd9/0d/+n7hoz+9w0d/eodP7O2yXv919Au2P7H0p/cN3o2lP+0r2IFd
Y+lP24N9OIBDOIJjOFn1eVM4g3O4gEu4gmu4gVu4g3t4gEd4gmd40fd/9Kfv
Fz760zt89Kd3+MTeLuv1j4N/Z/sTS3963+DdWPrTvoId2DWW/rQ92IcDOIQj
OIaTVZ83hTM4hwu4hCu4hhu4hTu4hwd4hCd4hhd9/0d/+n7hoz+9w0d/eodP
7O2yXmfwou1PLP3pfYN3Y+lP+wp2YNdY+tP2YB8O4BCO4BhOjKU/7QzO4QIu
4Qqu4QZu4Q7u4QEe4Qme4UXf/9Gf8m346E/v8NGf3uETe7usb73zA+E/2f7E
0p/eN3g3lv60r2AHdo2lP20P9uEADuEIjuFk1edN4QzO4QIu4Qqu4QZu4Q7u
4QEe4Qme4UXf/9Gfvl/46E/v8NGf3uETe7usX73+C2nbn1j60/sG78bSn/YV
7MCusfSn7cE+HMAhHMExnKz6vCmcwTlcwCVcwTXcwC3cwT08wCM8wTO86Ps/
+tP3Cx/96R0++tM7fGJvl/XOX0e3X7P9iaU/vW/wbiz9aV/BDuwaS3/aHuzD
ARzCERzDyarPm8IZnMMFXMIVXMMN3MId3MMDPMITPMOLvv+jP32/8NGf3uGj
P73DJ/Z2Wb9+/X/It/2JpT+9b/BuLP1pX8EO7BpLf9oe7MMBHMIRHMPJqs+b
whmcwwVcwhVcww3cwh3cwwM8whM8w4u+/6M/fb/w0Z/e4aM/vcMn9nbzHvhl
259Y+tP7Bu/G6v35y7Y/bQd2jaU/bQ/24QAO4QiO4cRY+tPO4Bwu4BKu4Bpu
4Bbu4B4e4BGe4Ble9P3L+/OXbX96P2OH5f35y7Y/vbO3m/fAr9j+xNKf3jd4
N1bvz1+x/Wk7sGss/Wl7sA8HcAhHcAwnqz5vCmdwDhdwCVdwDTdwC3dwDw/w
CE/wDC/6/uX9+Su2P72fscPy/vwV25/e2dvNe+BXbX9i6U/vG7wbq/fnr9r+
tB3YNZb+tD3YhwM4hCM4hpNVnzeFMziHC7iEK7iGG7iFO7iHB3iEJ3iGF33/
8v78Vduf3s/YYXl//qrtT+/s7eY98Gu2P7H0p/cN3o3V+/PXbH/aDuwaS3/a
HuzDARzCERzDyarPm8IZnMMFXMIVXMMN3MId3MMDPMITPMOLvn95f/6a7U/v
Z+ywvD9/zfand/Z28x74ddufWPrT+wbvxur9+eu2P20Hdo2lP20P9uEADuEI
juFk1edN4QzO4QIu4Qqu4QZu4Q7u4QEe4Qme4UXfv7w/f932p/czdljen79u
+9M7e7t5D3xrNv2JpT+9b/BurN6fG1/BDuwaS3/aHuzDARzCERzDibH0p53B
OVzAJVzBNdzALdzBPTzAIzzBM7wYS3/Kt2F5f252WN6fmx0+sbeb98D32v7E
0p/eN3g3Vu/P77X9aTuwayz9aXuwDwdwCEdwDCerPm8KZ3AOF3AJV3ANN3AL
d3APD/AIT/AML/r+5f35vbY/vZ+xw/L+/F7bn97Z28174Ptsf2LpT+8bvBur
9+f32f60Hdg1lv60PdiHAziEIziGk1WfN4UzOIcLuIQruIYbuIU7uIcHeIQn
eIYXff/y/vw+25/ez9hheX9+n+1P7+zt5j3w/bY/sfSn9w3ejdX78/ttf9oO
7BpLf9oe7MMBHMIRHMPJqs+bwhmcwwVcwhVcww3cwh3cwwM8whM8w4u+f3l/
fr/tT+9n7LC8P7/f9qd39nbzHti3/YmlP71v8G6s3p/7tj9tB3aNpT9tD/bh
AA7hCI7hZNXnTeEMzuECLuEKruEGbuEO7uEBHuEJnuFF37+8P/dtf3o/Y4fl
/blv+9M7e7t5D3yy/YmlP71v8G6s3p+fbH/aDuwaS3/aHuzDARzCERzDibH0
p53BOVzAJVzBNdzALdzBPTzAIzzBM7zo+5f35yfbn97P2GF5f36y/emdvd28
B05sf2LpT+8bvBur9+eJ7U/bgV1j6U/bg304gEM4gmM4WfV5UziDc7iAS7iC
a7iBW7iDe3iAR3iCZ3jR9y/vzxPbn97P2GF5f57Y/vTO3m7eAxe2P7H0p/cN
3o3V+/PC9qftwK6x9KftwT4cwCEcwTGcrPq8KZzBOVzAJVzBNdzALdzBPTzA
IzzBM7zo+5f354XtT+9n7LC8Py9sf3pnbzfvgVvbn1j60/sG78bq/Xlr+9N2
YNdY+tP2YB8O4BCO4BhOVn3eFM7gHC7gEq7gGm7gFu7gHh7gEZ7gGV70/cv7
89b2p/czdljen7e2P72zt5v3wLPtTyz96X2Dd2P1/ny2/Wk7sGss/Wl7sA8H
cAhHcAwnqz5vCmdwDhdwCVdwDTdwC3dwDw/wCE/wDC/6/uX9+Wz70/sZOyzv
z2fbn97Z28X8uaQ/sfSn9w3ejdX784vtT9uBXWPpT9uDfTiAQziCYzgxvvt7
CmdwDhdwCVdwDTdwC3dwDw/wCE8wf1/0/cv784vtT+9n7LC8P7/Y/vTO3m7e
Az9k+xPf/e9eekTvG7wbq/fnD9n+tB3YNZb+tD3YhwM4hCM4hpNVnzeFMziH
C7iEK7iGG7iFO7iHB3iEJ3iGF33/8v78Iduf3s/YYXl//pDtT+/s7eY98MO2
P7H0p/cN3o3V+/OHbX/aDuwaS3/aHuzDARzCERzDyarPm8IZnMMFXMIVXMMN
3MId3MMDPMITPMOLvn95f/6w7U/vZ+ywvD9/2Pand/Z28x74UdufWPrT+wbv
xur9+aO2P20Hdo2lP20P9uEADuEIjuFk1edN4QzO4QIu4Qqu4QZu4Q7u4QEe
4Qme4UXfv7w/f9T2p/czdljenz9q+9M7e7t5D/yY7U8s/el9g3dj9f78Mduf
tgO7xtKftgf7cACHcATHcLLq86ZwBudwAZdwBddwA7dwB/fwAI/wBM/wou9f
3p8/ZvvT+xk7LO/PH7P96Z293bwHftz2J5b+9L7Bu7F6f/647U/bgV1j6U/b
g304gEM4gmM4MZb+tDM4hwu4hCu4hhu4hTu4hwd4hCd4hhd9//L+/HHbn97P
2GF5f/647U/v7O3mPfATtj+x9Kf3Dd6N1fvzJ2x/2g7sGkt/2h7swwEcwhEc
w8mqz5vCGZzDBVzCFVzDDdzCHdzDAzzCEzzDi75/eX/+hO1P72fssLw/f8L2
p3f2dvMe+Enbn1j60/sG78bq/fmTtj9tB3aNpT9tD/bhAA7hCI7hZNXnTeEM
zuECLuEKruEGbuEO7uEBHuEJnuFF37+8P3/S9qf3M3ZY3p8/afvTO3u7eQ/8
lO1PLP3pfYN3Y/X+/Cnbn7YDu8bSn7YH+3AAh3AEx3Cy6vOmcAbncAGXcAXX
cAO3cAf38ACP8ATP8KLvX96fP2X70/sZOyzvz5+y/emdvd28B37a9ieW/vS+
wbuxen/+tO1P24FdY+lP24N9OIBDOIJjOFn1eVM4g3O4gEu4gmu4gVu4g3t4
gEd4gmd40fcv78+ftv3p/YwdlvfnT9v+9M7e5HvUtj+x9Kf3Dd6N1fvzd9n+
tB3YNZb+tD3YhwM4hCM4hhNj6U87g3O4gEu4gmu4gVu4g3t4gEd4gmd4MZb+
lG/D5vvntj+9P4gdPrE3+R617U8s/el9g3dj9f783bY/bQd2je/+uR6APdiH
AziEIziGk1WfN4UzOIcLuIQruIYbuIU7uIcHeIQneIYXff/m++e2P72fscPm
++e2P72zN/kete1PLP3pfYN3Y/X+/Bnbn7YDu8bSn7YH+3AAh3AEx3Cy6vOm
cAbncAGXcAXXcAO3cAf38ACP8ATP8KLv33z/3Pan9zN22Hz/3Pand/Ym36O2
/YmlP71v8G6s3p8/a/vTdmDXWPrT9mAfDuAQjuAYTlZ93hTO4Bwu4BKu4Bpu
4Bbu4B4e4BGe4Ble9P2b75/b/vR+xg6b75/b/vTO3uR71LY/sfSn9w3ejdX7
8+dsf9oO7BpLf9oe7MMBHMIRHMPJqs+bwhmcwwVcwhVcww3cwh3cwwM8whM8
w4u+f/P9c9uf3s/YYfP9c9uf3tmbfI/a9ieW/vS+wbuxen/+QduftgO7xtKf
tgf7cACHcATHcGIs/WlncA4XcAlXcA03cAt3cA8P8AhP8AwvxtKfvl/YfP/c
9qf3B7HDJ/Ym36O2/YmlP71v8G6s3p9/yPan7cCusfSn7cE+HMAhHMExnKz6
vCmcwTlcwCVcwTXcwC3cwT08wCM8wTO86Ps33z+3/en9jB023z+3/emdvcn3
qG1/YulP7xu8G6v35x+2/Wk7sGss/Wl7sA8HcAhHcAwnqz5vCmdwDhdwCVdw
DTdwC3dwDw/wCE/wDC/6/s33z21/ej9jh833z21/emdv8j1q259Y+tP7Bu/G
6v35R21/2g7sGkt/2h7swwEcwhEcw8mqz5vCGZzDBVzCFVzDDdzCHdzDAzzC
EzzDi75/8/1z25/ez9hh8/1z25/e2Zt8j9r2J5b+9L7Bu7F6f/5x25+2A7vG
0p+2B/twAIdwBMdwsurzpnAG53ABl3AF13ADt3AH9/AAj/AEz/Ci7998/9z2
p/czdth8/9z2p3f2Jt+jtv2JpT+9b/BurN6f37b9aTuwayz9aXuwDwdwCEdw
DCfG0p92BudwAZdwBddwA7dwB/fwAI/wBM/wou/ffP/c9qf3M3bYfP/c9qd3
9nZZ/+2H//TvP/0N++/TfeyTn1v8w3/wj+FLb/41++91fmL/r6/+7vPV+odv
f++PfeB/3vjvfaaPpD/x6/c0658//cBvv2Wz//7di7/V/OafHP6RX33uuz/9
HfvvMxa/swyvf61YP/U3X/m5fz/28Tsf+49vvlav7/j82z7w+rfe+O87Pvsb
P/Pm6m31+pf7lz77zDff+O/pvf+XPvJT9/xrvr7n937xjz/y3Tf+e30vvD/6
xoM/Xq3//JOf+s/3fcf++Yf3/neR/a/9817/77Nb8/qlL1z94F9X+fqjb//G
F+//9rT+7C+874fyb9l/X+3nv/Km7//9F4r1gw/2ny/usX1m3376sV++x/YZ
Pv/8O58//vv3/u0X3v5nUb7+ylu+dvm+753Xf/ns4P3fJ/P1/wFreyou
      "], {{{}, {}}, {{}, 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"], 
            Dashing[{Small, Small}]], 
           
           LineBox[{2441, 2443, 2446, 2447, 2444, 2448, 2450, 2453, 2454, 
            2458, 2463, 2461, 2464, 2462, 2460, 2456, 2459, 2457, 2455, 2452, 
            2451, 2449, 2445, 2442, 2441}]}, "0"], 
         Annotation[#, 0, "Tooltip"]& ], {}, {}}}], {
      RGBColor[0, 0, 1], 
      PointBox[{14.986571030929985`, 10.165016170206963`}], 
      GrayLevel[0], 
      PointBox[{15, 10}]}}, {FrameLabel -> {
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(log\\), \
\\(10\\)]\\)(\\!\\(\\*FractionBox[SubscriptBox[\\(M\\), \\(200\\)], \
SubscriptBox[\\(M\\), \\(\[Sun]\\)]]\\))\"", TraditionalForm], 
       FormBox["\"c\"", TraditionalForm]}, DisplayFunction -> Identity, 
     AspectRatio -> 1, AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> 
     Identity, Frame -> True, FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "M10DefaultDensityGradient", "GridLinesInFront" -> True}, 
     PlotRange -> {{14.7, 15.299999999999999`}, {0.1, 19.6}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJwVV3lYDW0fjqSyhpTQIiS9Cmmh+rqFFiVSWgiVaBOlsrTQRlnypmSrKCmE
klCW0oJWve17nbbT2c+MlITU9/hjrmvOPXNmrnl+9/YsO+RjfURURESkkhxT
yPH33EXWeG7ILD4aNxR+cnjYim85VkcTT1fA0Hdsd7UCH+/cDzwYdG5DPqe8
MWdVJZZWPk1YvJ6PtKQ/4X5L2hGiBIPy1kr8XObU6rmVj0u1d50nm9ux2SEv
vTu6Cq1B8xe/teXjhKghYq51QOya+uwR3Wq8avy8X8KDDwddhrycRSeqytNP
zuBUI25NYIp9EB+bj54bzxDrQuzkEobS7S/wubCm/2EMH6opCp2axV3Yo3vd
RNesBjsYPStG7/Ext/HD26KgbizymfHccqwGarrX3Y1f8DE63en2Dm0Guh+G
yx5+/B/Er5k8SfjIB0Nv8lQ7zUAaYyw0yKEWTM5PwUAzH2XHU2zdnvRgw8yN
AWbT6lBqlLV2A4cPu3rFxEDNXsg88n9ss78OKYnOfhG/+DDn+0gWx/ZibMvz
roOv6nB2eMHr+lkCGIoVn5ku7EUngyflNase+3aU/1BSFEBTUYqzw7wPhUEq
xicP12NjRpCe73oBVm5ytr/+qA+pMocCwwrqsXBC/WzRVgHkbHLK2qf1IyL3
btYV6QZ8s+srmmMnwOxjIjpKh/pxeGd7303vBtQ9T5h60EMAkWirDLeifpjw
pGXSPjUgS8LMOCtIgJHUVOmspQNYHWVlnrW0EVdcfkePxwjAefc1cjhwADOV
Y869CWiEx7vsKosUAbqaNg9vah0AVVie+/FLI6gfQVl6LwR44HDcU3sFEwuU
ZrjtMGqCsGi1+JyPAtAxeWqXvJmYOs1/ZKywCYLoNue+JgH0Syb4Xa+YGGJ3
RmToNYO/K/rdK5YA0d9Nstb9YaK3ets86/xm8GR1pC+OCdC4Ovb4eeNB8j1Z
KRMbWsDtYR5znCGE0sHWtW1XB1F0XUbjaU4LOI+ul2ssFeJovOLQPy2DyDod
WmCv3gq2z5ZlUzWEeFPmnhuqwEKyI8d82pNWsHSHgpohxLTfz/0b3ViIwe72
HJU2DE6mND3eLYTV2jGtVc9ZCF7+l/FtYJbv1AhxFSLZdfNo0A8WvMSXj0oq
tWMg9k/0rpNCcG5dzP8PbOzjXzmfl9yOfvtnfcrRQmh/qTujfJGN7bUj813l
OtCn6Kg/eluIMBE5vVN1bOi+PHB/7s0O9LIlb1Q+EeKLlsvvykUcqNwqW1sw
vxM9z99QyQVCyHlmFsi7cCATvPaDR2wnGKfdzXz/E+LI3aGzJzI5ECO0Xjir
CwzIpG3tFeJF/SZ8HuJgZMuUzpKLXegW//xb5psQE2IR5M1cMFW8PI+LdaOr
1t+WJ0phu15ViXcEFw0zGn8sjuhG5y3l54ULKdw8Pj+yuIqLEko/qnyiGx1O
9RJxqyj0p+3bJr2Ah5yGdOmAYAaqmo6LHdSlUCj77pieJQ9f/873FwP9qet3
xxhTaNnrxJMI4WHmld2tHcE9+OU9kvzOhsLXpGnurU94WKlR/o/Unx7M35TP
4bhQkGRkDmS085DioVCsjF6oiQVpyfpSUFba5RwgwYe63l6vwtBebKk3CDM+
R8Hg0EjXFl3iTzMTpB2Ke7Hv7mS1fwwF2/Q7e+e58WHa/d+HbyJ98PMslU1L
pODDMmzpSeCjKVvS86pRHy5rX3Cte0zhoirTOpv4waGwbQtUI/qQNsXs+UQe
hTSvS7Uh3/igd4cWlpb24W3NjN9rPlN4/0xjh8UyAUL+8kS0H/V3akwcGyk0
UY0VclYCSH4fmTe2tR/cI9fiL/VRoNYFGnPOCfB3vPHn+zFF04aRT1MQ91co
zcsSYPltLzf1z/2Qm1ioxvpDQen1R8MLXQLkeGZIVYgNYH1V20npWTT0fni8
t5kphKF+77tDJgPYfjOpZMtiGjab5mxU1hOietaSI3+iBuBy6ODsE6o0vINf
vvrqIYQDw3bu7fIBBGos25uiQyOq0GF90S0hBp9fe6spwUTcr4H0mm00Uib/
ZF0tE8IvvNq1xoyJzLKHX39b03hr9EBt/3chRGymz/G4xERJvKeBmguNhkiz
R2orKFxdYfRmahUTrgnqL897k/vtfqS4b6cgu891SHbGIOSmjITq+tHQt3h7
LdyRQpL9HjPl7UTfx97t4J2mUYDg8KRjFBRtjVPWXBxEVEeY3N2zNAy1/uf3
OpTMwVpnVKd8EAampqxdkTSKVCcP1cZRWGm1ytJoOgvDL2e/nHqJhpF8iQ33
AYVMy0XpFsYsZCo1hb7+l8bHeZHbRMk81S0kf9ueZ8HpauIOjwQa26Yba8tX
UHhh9mu380cWZH45yy1JpFH2a7qKbgcFLRP+Y6+pbHxxW8WqSaFhRlfI7BZQ
eLO1azLAiI2IRmFuWAaNyoHL4kcnCB+NauxCw9jYtPlV6IanNCzadoydl6JR
bPgh61IRG/SzoB2sHBo1X+Zw7ynT2GrwfFrCBBsP5Yzk7uTR2FlS1/5Gi0b5
plTHe//jYH+UOMuigEbd6/iqBhPyPN243MchHMwfrsmdKKFh/WTPe4EDjVqt
CMmX7zmodEoIfVFOo/GezLPpR8l1TX/nwl8chH7Zt+NwDQ3b623JSmRdW9Ye
zi/fxIX2pmVyso3kd3TiVb1YGnvVbec0nOFCkMEerGyj4RCy/9ye+zS61UyO
dOVzkTY/OzeEQaPDV8Hn+EsaLqq6BaxRLvaGBoSuZdJwPNLrdPEzDeZK1QVD
2jws0fy+sm+AxoQFffxRM43m9v6zlQE8bFlolniJ/D/z4xFfmuDqRvyo+bk8
eI4lztEk87XV7zqh20Lj/OPhWEeah2udwogOwkORl9b+oQTvmjt+O30NH3kf
Nv+IIOv4TK0yoJzgWqenpQk9+ei+f/3oP98o2Kfh1NxWGjGMWU91HvEx7QKr
p7GEgujivNP2BB8wXvgqlMnHGo9Ne0IIn7L/Fg+C62XJF1YQfVtbxFSsIL60
T/JBEJvg8dIqZfOcBERHPQY16yiIhcuFrCXrxAvWqN2XLEDqPM0XJ0UIn8Zi
z54muNGATtuDdgHKR86vVKgTYr/v9NAigt8xR59ARgiqtfVOWYoQEpyQMPF2
GkMvTHnae4RY+F5tjo+PEK+chsN3EdxMzmr4XJwQBvfORsiS/CItK/IWwVPD
HMbLSR4cCq8bLZojxMxdved7CD7GdhabN4vCpcPLj3owBMgrs4ta1UHDapfn
nH1Elzmmp3qksgU4ZFgT7UPwR3knZB9EUWhVq7R5e5b0irytl/IJPikfpCT4
SGFi9tIKF0sB3qq/uzxJcLsLEau1p9BYMXTcYIa8AIcz1sWYdtLIFlzWPGdI
eNpUkpMr4ENK/tHVWIJP33NdvzyYhl++9ErHAj7eJ8jHthL84PukbVJvafzU
pPbKXeBDoeinWNonGhcyfIdDCO9jwttMfu3goy0lojrkCQ1xpUmZ7Dc0FOtK
N3RK8xEXNjPO/hqNi4S+Pa9o5CpkKRV08WDhkmCneYrGjIVLD0q9oGFy7Nbs
u+k8iG2RXzp7P3lu7JNwoywa7e/Df5315qFI+WEf24jG7BmbMvwyiW/O8GYf
1OIhUHTto9JVNGLPl1c8IDqfcLBrwjgXG5j53ndn05CatBU0EX3EPdpcovSJ
6ObTZs0zwxTiA5lzp98j6zOqlj0lhouHGZU/rNspSI/4bdAl/pK/bWFSvw0X
zlHWhepFFG4cn2LvcZOG+fXJ6I9LuFjs3hkhkUH8kxsbdCee6K+PG5A+wEGj
6WGzgcsU7rgq3Ksivua7rsnlwlMOrqoKZ38gObmY8azk92UaU0M/7HTz58BU
8lTjbTsKyQ76g2uiadyoeaxvqs/BFN7EbX8DCvKNlRIHid5Ul15XVRXl4F1V
9MGdyhRSLB3WxIbSeO91dqFkNRsBT6VWrJagsKyCtauYzHHnW/epvHg2NGLu
cEUpIdK2nPQfIj7eK25NV+1jg+Ot/JzRKMSKQtFbygE0AuwMup4qs3Hf8mnA
27dCPNSNf2fjS3iRoVIZw2PBUUNLL4HoYFWuEuNvfvhPOBc9zWZh/frnURsD
hOhXvMEKdSfvPbD1HdeXBWnjBzeNNguhFx3S10NySLVg5etVG1gYc7j10HyW
EPGUaxfInKcukcg58n0Qnd5X8mzaBODZWrSm2BH/COQ9eZBPemRYaNn+dAGM
CjUbJq1o5LV9yegLHERagn/LEV8B7qxYXONkQear+zxV0YDk0mN31nEDAYau
TKkoMiY8uRmXdGCCCa8Cx9HTEgJsH+aUKm6mYfrd/2ZSMRM763ZND2/i4/6+
usJQPRrL9tjFtUcwsZ65VeZyKh8/S/Lf9BC//527MUbWmImFY7oq1735sFqd
8hJriV/OWxJtK87E2Mw1Oskb+Xh8LSo7ZTWNHN8/4dcrB9ClqGSSMY0PkbFj
mZPLaVyu7QmpvzKAog3Sdtl1PDg42aY7KdA4rFF6eu7OATwwlXDLTyb9rcwg
pWgRyder6X6WUgOIchw/WezBg7jGikTFBTQWCaKOXWnoh5fP1wuVRAdON2be
CCV8/2bu6VGZ0A/LSOaNBhEe8se/xfaIkzzLtHAVt+/H+lttGZ1fuJh7uOMy
phJfkdA4aCzXD+mnX14zb3PhXl1yIWWcQri71N7Izj6MfSj+LDzMxQfNzLDJ
UQr7y77ZlNztQ2fDq+bRdVzIJF4Ldhqi8OnDvKRb+/vgcea7cgnpt+bZn5fY
80lfOB1itEa2D+JNzeMh6RzEdSSZf2FSCFzLZhfX9+LR2ryWjfYctE33CzRi
kH7G3v2vbUwvTK/czBmR5EBxg9njvFYKGqkFWjyTXrBZpy7nFLDh5qTQ+k89
8U+HVZ3npvQiaov9YW8fNrKujIjdr6JQvmyF6KozPVC5p2uoSng9kl+lJfOJ
Qkj8z11WQgbKfsouYjaxoM9Mdb1SSGG9aG1y4CEG3GzHhlKiWYiQOh0vkk+B
5Z/OTWvthtiLtmpHPRYqDSxLTuaQfsQM1PmyoxsZs95myAoHMc9z+VdeJoU9
trsiv5d0wdTjTmhjyiAcbvxUcCZ9R6JsRZ2CbhdYHwP3xloPIqWk1rI5mcIH
nV9LzZ51Ikpx3wYLsUGwhBkh5jcp+D+q9TyxrBMqwXqzxd8wob445GlRLAXV
RRl5iWRfUtaymF3qxUSAiXWH1iUK3ReDRD/N7ICb5u/ic/JMvPdTlXwSQXzu
7+eGtUPs385EvboBTE2Z0FUMoWDqtfKuzGgbMrjvA0YjSE+tbnJLOElhvOMX
F0fbYGycvDNXewDXfjy5IelD8tKiTseztxXM1BDV45x+tC4P/3TOg4JbQUZk
vG0rzo/vn6qW1A8FK/vhYZLHNgZi/0hXteD7U1fJ1ab9CLHtnNlEeuWFIdO5
FgYt+Bzmq3Gd8CuzAXZq9hTyHl4eDs9uRoLtWZs/Pn1o2ZWeGmZNge1Y0/pG
qRmH1S6fcZ/WB9EaCX6LJYVF86QK6PgmaE3evFt/uxfrzI9pq5PcNC+zTlUR
a4Jo04NSffVeHCivD43cRiE4+Mb5A6cb8XC3S61FZA+ubNOpageFZ+vaPBK4
DTD+HSSn9IyBNyWJ0uv0yXoOLrasdmwAMz3BdaSpG4OGkwejdCjMSTqwfup/
9YjcmZ1V8acL8wtcM7vWU9hslbpw0+Z6KI+V/0hW6QI2VQxrqlM4ITbw0ye3
DqX3+4xO7OqEd94aw0uqpC+/W8l4uKIOzha/rxif6cCdDXEXe5ZTeNRTd/69
ei1Evku3yN1vR3nO9wZtRQpS5naWq+f/h/R7GkpUZRtG1PfJxywmPHnVufDW
6BdsMzPzKv3WimVPP7j3k/1hs4ILY1pnNfqHXF7dXNKKnarLczfOo7DxEuuh
X1EVIpKCJ7y2tSA4I3r8X9JDEoeP+vQ+qMQy4xtmONaMx8oCk0FxCn8ODOnu
vFiBYio7fsHNJrSkWMXpk32pU8UpkQLvcjjfruhif2iEqPzrzrgJIUo1xytW
7y7DpFG/SgG7AesS5VQ4P0nO3A2Pu6X9Gff4v32vSTXggOw5X0OyX/k/iD3N
zg==
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.5, -112.50000000000001`}, {7.5, 
                112.50000000000001`}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -63.28125000000001}, 
                    Offset[{4., 0}, {7.5, -63.28125000000001}]}, {{
                    7.5, -4.6875}, 
                    Offset[{4., 0}, {7.5, -4.6875}]}, {{7.5, 
                    53.90625000000001}, 
                    Offset[{4., 0}, {7.5, 53.90625000000001}]}, {{7.5, 
                    112.50000000000001`}, 
                    Offset[{4., 0}, {7.5, 112.50000000000001`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.5, -110.15625000000001`}, 
                    Offset[{2.5, 0.}, {7.5, -110.15625000000001`}]}, {{
                    7.5, -98.4375}, 
                    Offset[{2.5, 0.}, {7.5, -98.4375}]}, {{7.5, -86.71875}, 
                    Offset[{2.5, 0.}, {7.5, -86.71875}]}, {{7.5, -75.}, 
                    Offset[{2.5, 0.}, {7.5, -75.}]}, {{
                    7.5, -51.56250000000001}, 
                    Offset[{2.5, 0.}, {7.5, -51.56250000000001}]}, {{
                    7.5, -39.84374999999997}, 
                    Offset[{2.5, 0.}, {7.5, -39.84374999999997}]}, {{
                    7.5, -28.125000000000004`}, 
                    Offset[{2.5, 0.}, {7.5, -28.125000000000004`}]}, {{
                    7.5, -16.40625}, 
                    Offset[{2.5, 0.}, {7.5, -16.40625}]}, {{7.5, 
                    7.031250000000001}, 
                    Offset[{2.5, 0.}, {7.5, 7.031250000000001}]}, {{7.5, 
                    18.75}, 
                    Offset[{2.5, 0.}, {7.5, 18.75}]}, {{7.5, 
                    30.468750000000004`}, 
                    Offset[{2.5, 0.}, {7.5, 30.468750000000004`}]}, {{7.5, 
                    42.1875}, 
                    Offset[{2.5, 0.}, {7.5, 42.1875}]}, {{7.5, 65.625}, 
                    Offset[{2.5, 0.}, {7.5, 65.625}]}, {{7.5, 77.34375}, 
                    Offset[{2.5, 0.}, {7.5, 77.34375}]}, {{7.5, 89.0625}, 
                    Offset[{2.5, 0.}, {7.5, 89.0625}]}, {{7.5, 
                    100.78125000000001`}, 
                    Offset[{2.5, 0.}, {7.5, 100.78125000000001`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.0\"", 2., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -63.28125000000001}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.5\"", 2.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -4.6875}], {-1, 0.}, Automatic, {1,
                     0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"3.0\"", 3., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 53.90625000000001}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"3.5\"", 3.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.50000000000001`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.165698, 0.282261, 0.936187], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.11046533333333335`, 0.188174, 
                    0.6241246666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.165698, 0.282261, 0.936187]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.165698, 0.282261, 0.936187]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.165698, 0.282261, 0.936187], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8888888888888888`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.358007, 0.574105, 0.948836], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.23867133333333335`, 0.38273666666666667`, 
                    0.6325573333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.358007, 0.574105, 0.948836]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.358007, 0.574105, 0.948836]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.358007, 0.574105, 0.948836], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7777777777777778`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.546319, 0.783703, 0.966583], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3642126666666667, 0.5224686666666667, 
                    0.6443886666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.546319, 0.783703, 0.966583]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.546319, 0.783703, 0.966583]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.546319, 0.783703, 0.966583], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6666666666666667`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.713848, 0.924666, 0.981842], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4758986666666667, 0.616444, 
                    0.6545613333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.713848, 0.924666, 0.981842]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.713848, 0.924666, 0.981842]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.713848, 0.924666, 0.981842], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5555555555555556`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.866087, 0.99559, 0.992172], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.5773913333333334, 0.6637266666666667, 
                    0.661448], FrameTicks -> None, PlotRangePadding -> None, 
                    ImageSize -> Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.866087, 0.99559, 0.992172]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.866087, 0.99559, 0.992172]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.866087, 0.99559, 0.992172], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4444444444444444`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.997223, 0.994827, 0.825925], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6648153333333333, 0.6632180000000001, 
                    0.5506166666666668], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.997223, 0.994827, 0.825925]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.997223, 0.994827, 0.825925]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.997223, 0.994827, 0.825925], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.33333333333333337`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.981765, 0.945724, 0.654917], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.65451, 0.6304826666666667, 
                    0.43661133333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.981765, 0.945724, 0.654917]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.981765, 0.945724, 0.654917]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.981765, 0.945724, 0.654917], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.22222222222222232`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.943297, 0.818753, 0.479667], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6288646666666667, 0.5458353333333333, 
                    0.319778], FrameTicks -> None, PlotRangePadding -> None, 
                    ImageSize -> Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.943297, 0.818753, 0.479667]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.943297, 0.818753, 0.479667]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.943297, 0.818753, 0.479667], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.11111111111111116`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.894942, 0.622553, 0.310567], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.596628, 0.41503533333333337`, 
                    0.20704466666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.894942, 0.622553, 0.310567]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.894942, 0.622553, 0.310567]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.894942, 0.622553, 0.310567], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.845274, 0.369528, 0.19115], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.563516, 0.24635200000000002`, 
                    0.12743333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.845274, 0.369528, 0.19115]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.845274, 0.369528, 0.19115]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.845274, 0.369528, 0.19115], Editable -> False, 
                    Selectable -> False]}], "}"}]}], "}"}], ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"1.5811618187975423`", ",", "3.505902916467851`"}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7340014388306737`*^9, 3.7340048365180693`*^9, 3.7340049340801353`*^9, 
   3.7340050999164753`*^9, {3.734005135158969*^9, 
   3.734005139235274*^9}},ExpressionUUID->"eb0a7185-666b-4228-bf67-\
e76773fb1c2d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Isothermal Fit", "Section",
 CellChangeTimes->{{3.73342314112722*^9, 
  3.7334231458441076`*^9}},ExpressionUUID->"70b590de-c90c-40b2-a388-\
ee7ec4efd501"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"r200", "=", 
   RowBox[{"UnitConvert", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["M200", 
       RowBox[{"1", "/", "3"}]], 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"3", 
          TemplateBox[{InterpretationBox["\[InvisibleSpace]", 1],SubscriptBox[
             StyleBox["\"M\"", Italic, StripOnInput -> False], "\"\[Sun]\""],
            "solar masses","\"SolarMass\""},
           "Quantity"]}], 
         RowBox[{"800", "\[Pi]", " ", "\[Rho]crit"}]], ")"}], 
       RowBox[{"1", "/", "3"}]]}], ",", "\"\<SI\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]2", "=", 
   FractionBox[
    RowBox[{"M200", 
     TemplateBox[{InterpretationBox["\[InvisibleSpace]", 1],SubscriptBox[
        StyleBox["\"M\"", Italic, StripOnInput -> False], "\"\[Sun]\""],
       "solar masses","\"SolarMass\""},
      "Quantity"], 
     RowBox[{
      TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1],StyleBox[
        "\"G\"", Italic, StripOnInput -> False],
        "Newtonian gravitational constants","\"GravitationalConstant\""},
       "Quantity"], " ", "/", 
      TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1],"\"m\"","meters",
        "\"Meters\""},
       "Quantity"]}]}], 
    RowBox[{"Expand", "[", 
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"r200", "-", 
        RowBox[{"DL", " ", "\[Theta]c", " ", 
         RowBox[{"ArcTan", "[", 
          FractionBox["r200", 
           RowBox[{"DL", " ", "\[Theta]c"}]], "]"}]}]}], ")"}], "*", 
      RowBox[{"1", "/", 
       TemplateBox[{
        InterpretationBox["\[InvisibleSpace]", 1],"\"m\"","meters",
         "\"Meters\""},
        "Quantity"]}]}], "]"}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7334233452995434`*^9, 3.7334234553958235`*^9}, {
  3.7334235844773006`*^9, 
  3.7334237836683407`*^9}},ExpressionUUID->"2c4907fe-90f8-49b8-93dc-\
659eabc1f77d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ISOsurfaceDensity", "=", 
   FractionBox["\[Sigma]2", 
    RowBox[{"2", 
     TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1],StyleBox[
       "\"G\"", Italic, StripOnInput -> False],
       "Newtonian gravitational constants","\"GravitationalConstant\""},
      "Quantity"], "DL", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[Theta]", "2"], "+", 
       SuperscriptBox["\[Theta]c", "2"]}]]}]]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ISOaverageSurfaceDensity", "=", 
   FractionBox[
    RowBox[{"\[Sigma]2", 
     RowBox[{"(", 
      RowBox[{
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Theta]", "2"], "+", 
         SuperscriptBox["\[Theta]c", "2"]}]], "-", "\[Theta]c"}], ")"}]}], 
    RowBox[{"2", 
     TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1],StyleBox[
       "\"G\"", Italic, StripOnInput -> False],
       "Newtonian gravitational constants","\"GravitationalConstant\""},
      "Quantity"], "DL", " ", 
     SuperscriptBox["\[Theta]", "2"]}]]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ISOconvergence", "=", 
   FractionBox["ISOsurfaceDensity", "criticalSurfaceDensity"]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ISOshear", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Expand", "[", 
     FractionBox[
      RowBox[{"ISOaverageSurfaceDensity", "-", "ISOsurfaceDensity"}], 
      "criticalSurfaceDensity"], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ISOreducedShear", "=", 
   FractionBox["ISOshear", 
    RowBox[{"1", "-", "ISOconvergence"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ISOellipticity", "=", 
   RowBox[{
    FractionBox[
     RowBox[{"2", "*", "ISOreducedShear"}], 
     RowBox[{"1", "+", 
      SuperscriptBox["ISOreducedShear", "2"]}]], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Theta]", "\[Rule]", 
       RowBox[{"t", "*", 
        RowBox[{"QuantityMagnitude", "[", 
         RowBox[{
          
          TemplateBox[{
           InterpretationBox["\[InvisibleSpace]", 1],
            RowBox[{"\[InvisibleSpace]", "\"\\\"\""}],"arc seconds",
            "\"ArcSeconds\""},
           "QuantityPostfix"], ",", 
          
          TemplateBox[{
           InterpretationBox["\[InvisibleSpace]", 1],"\"rad\"","radians",
            "\"Radians\""},
           "Quantity"]}], "]"}]}]}], ",", 
      RowBox[{"\[Theta]c", "\[Rule]", 
       RowBox[{"tc", "*", 
        RowBox[{"QuantityMagnitude", "[", 
         RowBox[{
          
          TemplateBox[{
           InterpretationBox["\[InvisibleSpace]", 1],
            RowBox[{"\[InvisibleSpace]", "\"\\\"\""}],"arc seconds",
            "\"ArcSeconds\""},
           "QuantityPostfix"], ",", 
          
          TemplateBox[{
           InterpretationBox["\[InvisibleSpace]", 1],"\"rad\"","radians",
            "\"Radians\""},
           "Quantity"]}], "]"}]}]}]}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7334231698381867`*^9, 3.733423203610037*^9}, {
   3.733423237047666*^9, 3.733423317396471*^9}, {3.7334234594038086`*^9, 
   3.733423512550946*^9}, {3.733423555755623*^9, 3.7334235687338943`*^9}, {
   3.7334237689368925`*^9, 3.733423845142722*^9}, 3.733424099291009*^9, {
   3.733424523380448*^9, 3.733424544006164*^9}, {3.7339233125317135`*^9, 
   3.733923352554843*^9}},ExpressionUUID->"eae9ee97-c3a9-45a8-884e-\
56da49ba6c95"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ISOchiSquared", "=", 
   RowBox[{"Total", "[", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"ellipticity", "+", 
        RowBox[{"(", 
         RowBox[{"ISOellipticity", "/.", 
          RowBox[{"t", "\[Rule]", "theta"}]}], ")"}]}], 
       "\[Sigma]ellipticity"], ")"}], "2"], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.7334238605868454`*^9, {3.7334246996206703`*^9, 3.733424703648019*^9}, {
   3.7339234345367203`*^9, 
   3.733923436569772*^9}},ExpressionUUID->"76ccfc65-0334-481b-b830-\
7fc1271992a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ISOfit", "=", 
  RowBox[{"NMinimize", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ISOchiSquared", "/.", 
       RowBox[{"M200", "\[Rule]", 
        SuperscriptBox["10", "logM200"]}]}], ",", 
      RowBox[{"10", "<", "logM200", "<", "20"}], ",", 
      RowBox[{"0", "<", "tc", "<", "1000"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"logM200", ",", "tc"}], "}"}], ",", 
    RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", 
    RowBox[{"WorkingPrecision", "\[Rule]", "10"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7334241179526715`*^9, 3.733424147568844*^9}, {
   3.733424199471613*^9, 3.733424200270506*^9}, 3.7339234399005394`*^9, {
   3.733923968497746*^9, 3.733923970329007*^9}, {3.7339264753057837`*^9, 
   3.73392649381151*^9}, {3.7339265518666153`*^9, 3.7339265648856945`*^9}, 
   3.733926668646289*^9},ExpressionUUID->"23c8fb61-6ce9-452c-a67e-\
ccd97de0a0ed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"42.6576978702092048934`10.", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"logM200", "\[Rule]", "15.7446586373082684125`10."}], ",", 
     RowBox[{"tc", "\[Rule]", "140.4312288414413272995`10."}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.733424131809802*^9, 3.733424149060219*^9}, 
   3.7334242016325836`*^9, 3.7334243090641613`*^9, 3.733424719492423*^9, 
   3.7339234571085124`*^9, {3.733926487471572*^9, 3.7339264966151543`*^9}, {
   3.733926554307126*^9, 3.7339265685623803`*^9}, 
   3.7339267428132677`*^9},ExpressionUUID->"10b93df3-d252-4210-9fef-\
294afe082e4a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ISOlogchiSquared2D", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"logM200", ",", "tc", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"10", ",", 
           RowBox[{"ISOchiSquared", "/.", 
            RowBox[{"M200", "\[Rule]", 
             SuperscriptBox["10", "logM200"]}]}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"logM200", ",", "15.4", ",", "16", ",", ".01"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"tc", ",", "100", ",", "200", ",", "5"}], "}"}]}], "]"}], ",",
      "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7339166696605473`*^9, 3.733916777507247*^9}, {
   3.733916834803506*^9, 3.7339168613317766`*^9}, {3.7339169438353333`*^9, 
   3.733916969739814*^9}, {3.733917012549602*^9, 3.7339170378708787`*^9}, {
   3.733917072352238*^9, 3.7339170809086957`*^9}, {3.7339171452366066`*^9, 
   3.733917269030781*^9}, {3.733917455568344*^9, 3.7339175041065865`*^9}, {
   3.7339176888954935`*^9, 3.7339177017198095`*^9}, {3.733917742859766*^9, 
   3.7339178468491263`*^9}, {3.7339180359614334`*^9, 
   3.7339180366778336`*^9}, {3.733918189068511*^9, 3.733918193544628*^9}, {
   3.733918240434667*^9, 3.7339182484272013`*^9}, {3.733918380683181*^9, 
   3.7339184102220855`*^9}, {3.733918440974614*^9, 3.733918453512727*^9}, {
   3.7339184846490183`*^9, 3.7339184951403317`*^9}, {3.7339186224506173`*^9, 
   3.733918655499171*^9}, {3.7339186873353186`*^9, 3.733918782588296*^9}, {
   3.7339189522252183`*^9, 3.7339189541313725`*^9}, {3.733918988532618*^9, 
   3.733918995199665*^9}, {3.7339190567421827`*^9, 3.733919122467949*^9}, {
   3.7339191751415854`*^9, 3.7339191784299765`*^9}, {3.733919215248884*^9, 
   3.7339193357060447`*^9}, {3.733919420824418*^9, 3.7339195153571615`*^9}, {
   3.7339196612040124`*^9, 3.7339196621573963`*^9}, {3.733919719551648*^9, 
   3.733919734578854*^9}, {3.73391979113148*^9, 3.733919845194385*^9}, {
   3.733919953212509*^9, 3.733919954578019*^9}, {3.7339208680780315`*^9, 
   3.733920900448841*^9}, {3.733920942512059*^9, 3.7339209564673595`*^9}, {
   3.7339209952022877`*^9, 3.733920998485926*^9}, {3.7339210465114236`*^9, 
   3.7339210544310355`*^9}, 3.7339210979720445`*^9, {3.7339211424323635`*^9, 
   3.7339211571271553`*^9}, 3.7339213707762384`*^9, {3.733921440568633*^9, 
   3.7339214738535843`*^9}, {3.733921896101028*^9, 3.7339218964135456`*^9}, {
   3.7339222014462495`*^9, 3.7339222164847116`*^9}, {3.7339226022557974`*^9, 
   3.733922611298519*^9}, {3.7339232036627398`*^9, 3.7339232531959715`*^9}, {
   3.733923405083048*^9, 3.7339234167999325`*^9}, {3.733925932695816*^9, 
   3.7339259646163473`*^9}, {3.733926614637246*^9, 3.733926655499461*^9}, {
   3.733926752162752*^9, 3.7339267921224737`*^9}, {3.7339268762633767`*^9, 
   3.7339268835935345`*^9}, {3.73392692133676*^9, 3.733926933107061*^9}, {
   3.733926971474947*^9, 3.7339269745721817`*^9}, {3.7340051677892747`*^9, 
   3.7340052014076576`*^9}, {3.7340052486989975`*^9, 
   3.7340052700485163`*^9}},ExpressionUUID->"05bf1e7d-3087-45b1-82fb-\
40916c74a73a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListDensityPlot", "[", 
    RowBox[{"ISOlogchiSquared2D", ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"ColorData", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<LightTemperatureMap\>\"", ",", "\"\<Reverse\>\""}], 
        "}"}], "]"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListContourPlot", "[", 
    RowBox[{"ISOlogchiSquared2D", ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"Contours", "\[Rule]", 
      RowBox[{"Log", "[", 
       RowBox[{"10", ",", 
        RowBox[{
         RowBox[{
         "ISOfit", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         "+", 
         RowBox[{"{", "1", "}"}]}]}], "]"}]}], ",", 
     RowBox[{"ContourShading", "\[Rule]", "None"}], ",", 
     RowBox[{"ContourStyle", "\[Rule]", "Dashed"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", 
      RowBox[{"Point", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"logM200", ",", "tc"}], "}"}], "/.", 
        RowBox[{
        "ISOfit", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
       "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(log\), \
\(10\)]\)(\!\(\*FractionBox[SubscriptBox[\(M\), \(200\)], SubscriptBox[\(M\), \
\(\[Sun]\)]]\))\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(c\)]\) (arcseconds)\>\""}], 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{
  3.7339246495907526`*^9, {3.7339258302652855`*^9, 3.733925837778191*^9}, {
   3.733925935301738*^9, 3.73392593641113*^9}, {3.7339260601421137`*^9, 
   3.733926105446121*^9}, {3.7339261380257473`*^9, 3.7339261969615345`*^9}, {
   3.733926284116642*^9, 3.7339263336077385`*^9}, {3.733926678803507*^9, 
   3.733926689477786*^9}, {3.733926805921593*^9, 3.7339268598945074`*^9}, {
   3.7339269519422445`*^9, 3.7339269560531473`*^9}, {3.7339270324023843`*^9, 
   3.7339270621522646`*^9}, {3.7339277754561634`*^9, 3.733927817409708*^9}, 
   3.7339279012906957`*^9, {3.7340052968304033`*^9, 
   3.7340052976584644`*^9}},ExpressionUUID->"5b6dd1f6-193b-4a23-81f8-\
41355294d604"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
u3HuGR7Vk/7F/M38xrlneFTPp/cF1BM832dQT/B8n0E9eV+MK3kYz/cZ1JM+
4/k+g3qCu/F8n0E96V/M38xvPN9nUM+n9wXUEzzfZ1BP8HyfQT15X4wreRjP
9xnUkz7j+T6DeoK78XyfQT3pX8zfzG8832dQz6f3BdQTPN9nUE/wfJ9BPXlf
jCt5GM/3GdSTPuP5PoN6grvxfJ9BPelfzN/MbzzfZ1DPp/cF1BM832dQT/B8
n0E9eV+MK3kYz/cZ1JM+4/k+g3qCu/F8n0E96V/M38xvPN9nUM9/rO8LqCc4
eoKjJzh68n5r98W4kodx9ARHT/qMoyf9O3I3jp70G0dP+pv5jaMn/fk+g3qC
5/sM6gme7zOoJ++LcSUP4/k+g3rSZzzfZ1BPcDee7zOoJ/2L+Zv5jef7DOr5
9L6AeoLn+wzqCZ7vM6gn74txJQ/j+T6DetJnPN9nUE9wN57vM6gn/Yv5m/mN
5/sM6vn0voB6guf7DOoJnu8zqCfvi3ElD+P5PoN60mc832dQT3A3nu8zqCf9
i/mb+Y3n+wzq+fS+gHqC5/sM6gme7zOoJ++LcSUP4/k+g3rSZzzfZ1BPcDee
7zOoJ/2L+Zv5jef7DOr59L6AeoLn+wzqCZ7vM6gn74txJQ/j+T6DetJnPN9n
UE9wN57vM6gn/Yv5m/mN5/sM6vn03w9nT/B8n+HD2RM832fI+y15vs+QXMnD
eL7P8CXP9xnSZzzfZ0j/jtyN5/sM6Tee7zOkv5E/NZ7vM6R/v/k/cVHzZA==

      "], {{{
         EdgeForm[], 
         GrayLevel[0.8], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxN3HfcyNX7x/F7tRUVDSEtI0qKihaJpJIilCiyMlJKiIqoUERLIjOjECWp
KFGkgVKSUokooVS+LY3fuX6f5/1w//F+nHOuda5zvT638R2Oa9fjqpvzcnJy
bjggJyc/rUfmZGvYyiTtl3QM7ZtUOukI/lzxeWxH5eytUTZpfzWOTirgL5d0
AP8JSYckHZ90XFKxpPJJxyYdKDbOB7FF3MFio+5pSdWTTkwqrl70t487T0oq
wV8h6VC2An1GP5WTSiZVSqrKFv2fz3eet1Vhj7jDkyqKjZxT3Bfrqd69nx4j
7jD37+Puo81gf3PYl6+0vH2LzLyad5ZWu5qcePfp5nSAWdXVQ1VzKmZW5cSe
YZYHmuexbDXEHmTekVMz6Ux8Djb749nOMsdaSbXNuHgRDodgUV7tms6Rd7ZZ
RN45mJRQ70T+WmZdxVsOE1fB28t4f1OcrsLwcHxC52JXiq+yfawnq11H/ar2
dbE5yhzLYHCa2V+YVI+vrvPh+quI0dFiK3rfuZhF3kXqlWablvRa0kJ3hL++
NeJbmt0lSY1wKc8WPBskXYxjOSzPYGuYs/fn6sycvT9XNZyj3qVF5l7LegIG
J8g/iyL2Mr5YL9dzNf3WYmvsjob6ruCO2hT+KzAIdhfgVdGsQk2SrsSqEo7n
sV1lrleIa45DXQyvto/5tTDDivqIvM452XfTSd/hv0bO1UXqNZdfDc961lP4
q3t/fYoa1+qxQ1JHM7guqTVe1TFrILYVXqdjdjHbdRjXMMNL1GiDXU38auFx
OT7XJ93A18a5hjsa4nim2NryG+MZeW3VO4uturc1cEf42+Vk31pZfZ+PzVWY
3JjUHsdzMGrC1kHsuUVYdsTiArWa2sfaDIOuSd3w6YJNV77m3tDO3Xdh3N/9
tfVVD7fCnC5qxHdY2d0t3dM9qW9Sn6Th5t8Qg2BzS9Kt5lIfy9DNST1wbIBl
a7E9nXvIb6RuG7O/PakXZrc5t5F3G2aN+C9zvsEb7kkagNFlODXUx3XOUfsO
s7rcvK7CoaPZ9fbmJmbWnvqYx5V8Hfgby4v8O5P6YdnP/Lvorav77nBHU3d3
MvMW5t6Mr7P3dJP7CK6jxIT/Jv6IG5iT/fy1xK6Dvvt6fysz7y72Xryuwexm
tkFiry3CaXDSfTl72d9KYbsfpyFJQ7Fpg1cbOT3VGqRWT3kPYBJ5w7C8Xr3b
+Id4S1/zbSuul7k+5v3hj+90BB7tzDn0YNJD5nEjln3YhmPXQf071XgYm45Y
Pm5uA3AdiUU/sSPd2RbjzvL7Ow/Tx0043m3f2fkabILD9JyMd/zeWPh74TVm
92TSGFx6sA3U3xPyu2N5L9tovG7BrIe4Qc5R76kicx9i7YlBT/n3U8SO5Yt1
nPfcpe8hbE+7Y7S+e7ljKIV/PAaTkibjdYdZhSYkTcSrN2YPsU0y1/Higl1f
/Po5P4zTVPO8Qx/DxMWdU/QfvT8qJ2zP4PqM/LvwHGXtx/+cOQeDRfgt1ONL
SfPNYGbSrJzsm31W/OP2z+E1UK0n2GZiPMgMn1RjNnaD8RuCxzh8nk+awzfb
eZA7RuN4n9ih8p/GM/Lmqnc/2wB9P+6O8L+Qk31r3fQ9HJtJmLyYNA/HYRhN
YHtJ7INFWMacXsZlODaT2RZg8GpO9ufFkTg9Yx2B2dP6etE58l5x/1B9jZI/
Vf4r6l6U/jLXMuma3OxbiLj4Zk5L52q5mf9J85uFzeKkN60zMfvId/Ahtm+w
zxK7xPkNeWNwnW32byW9jdlS59nylmI2hn+s8xxvWJm0CqOxOEW/T+hvrtrL
zGqceU3CYb7ZLU96B6/xmM1jWyF2Ao7j1XpR/rtJ7+EW6/tFZv2q+5a5Y7K7
XzbrqfhO4VsgbwpOoQ+8c4HaH8iJd6/OyX7+otZC/c3Tc8z7YzNfKDYYzZCz
yD7W15M+KcJ2sdxPcvayf5PCthandUmfYTMbr9lygt/WnOz72OIceZ9iEnnr
sXxevaX867xlhfnOFfe2t7/q/eHfkPQlHi+Yc+jzpC/M40Us32HbgN1L6r+r
xlfYzMfyVQxWmv3XSRv5vnJ+QX/LMHpZ7DLv+xyzyPtGvQVsj2Ixwx3h32SN
+P8l7THHv5K2meEneG5O+hbDhfh+yLYFw+/Fvy7uI+fv1Suc+zrrEgyW4L2W
IvYHvli36/kD/a5j2+GuuGcNZm/h/Rn/Tgx2Jf2M1zKzCv2Y9BNeyzH7gm2X
ue4UF+xW4Pee81fmt9sMl+ljvbi48xd9h/83OWH7Fddf5X+A50bre/yrvH8T
RY3f9Ziffu0syM0Y/IndajmbKWL/wGs1Zt+y/Wl2H2G/xvpd0r/mv83MPzX3
OP/DXyI3+26K52Y14o4tmP8j9jP5O9SLvP/UW8u2yts2uyP88R8Cxrf2mr43
YLMLk9zkz8vNOK7HKBS2mMsXGBeyjDntk5tx2YBNKGz75mYM9k/rAbnZ3L/C
5issf/GG6CvujnPk7Zeb3f+Zvjbitlt++KNu/AzG73/TfQtxz4FJRyYdkVQl
N5v9FhyDzcHJdkhuNpdNWIYOSrZiuRnHzVhGTsQGiziHP/K/w3SP2R+WbIcn
nZSb8TtRTPj/zsl8/4n9R/y/ZlMmqWxuxugHnLb4nv50jvySudmstpvXLhwK
zK6UN/9oZnlYHmEeP2EZHHeae65v/aiko7GMtXTu3llHjznujzt+xj5i/4fJ
Adj9jN+v2O6H5THeua/ax/gm4t3lcrOfv6h1oO8sT89/4nAwrhF7bG7G6zfM
DmIrj9HvRTgdl3R87l72h2AfthOSamNWKzfjtKfIz1/kFPdNlFeruLwT8a6Y
VIlKsv2txqHecqT5Hib+cG/f3/uP9J1WxTHHnEOVk042j1wsj2Crgl2++kep
cQqOBVjuj0EZsz81N/sz4tFiT3VnfGclMdpHbElvq4xZ5J2m3r5sv+F2kDvC
Xz137++F4Y/Z1Uw6E5di5hk8T086Q/6BWB7LVgOvgzErJq68c9Q7y6xL5O79
+SuOUXH5J1DEns13Nu5lvOM0daJGBXfU0Pd5ZhCzuCI3+24aY3BBUh28Soqr
LOd8vEphdjLbBWqdK+4o30FVXI7CJuZdLzf783xF8ZXExZ119R3++nLCdiGu
F8o/Bs9q1qP5y3p/dYoaDfR4VVJTM2iYdAleZTE7XezFeJXD7Ay2hhiXN8Oa
ajTC7jj8TsKjFj6XJl3G18i5vDtq4Hi82Arya+MZeZerdwJbWW873R2XYxff
2gH6roJNcGmP8Y3mfSVG59lfJbZyEZYxp2a4VMGmDtvVGLTIzf7OdipOF1qr
YlbBO85xjrzm7jvf/dXk15PfXN34M9Q7fg+Ot56G5ZF5qZ+kqnnZ/GtgEGyu
S2ptLtWxDF2b1ArH07G8RGwb51byz8S1kdnfkNQWs+udG8m7HrMz+c92vswb
uiZ1w+hsnGroo6Fz1G5nTrVwvMB8mppdsGuS1Ikt5tcX1z4YdmQ/R60rxEZO
Z9xivanIrFu4L+6/Ed8LxF4kriV2dfC70Lk5dfHOq9XuIife3R2zqBV/r++v
h07ef7GZXyP2ZrzqY3YtWw+xDYpwuiXp1iLsW1PYeuJ0e1IvbBrh1UhOG7V6
qNVG3m2YRN4dWF6q3vX8t5t1R2+5XFxbb2/h/SNwGo5HY3MO9cauCV97+1g7
qN1P/U72/bFpao4tMOhq9ncl3c3X37mx/tph1ExsO+/rjVnk3aPe1WyPJk1P
muGO8A+w3s0fsxucdB8urdiC58Cke3G8Bsub2QbhdR1mrcT1cI569xeZ++3W
Nhi0kd+TIvYBvliH6LmLfm9nG+qOQfpu645eFP5hGAS7O/FqZ1ahB5MewupG
HPuwDTfXYeJG4dAfw5H2Mb9HzLCdPiJvSm723UzWd/gfkzOySL1R8rvgebe1
M3837x9AUeNxPU5MmmQGo5OexKsbZgPFPoFXd8zuZRuNcQ8zHKzGGOxuwe92
PIbg81TSWL4xzj3cMQjHW8X2kj8Uz8gbp15Ptm7eNtAd4X86N/vWWuq7LzbD
MRmfNAHHOzB6kG2i2N5FWE7C4k61RtjH+jAG03Kzn5PgMxWbaXyjvOFpd7+C
8QL399LX3bgV5kxVI77D9u4u/NkLliuSNiR9icfMpFlmMQC/0LNJz2E3EL8n
2GZiNwi/QeIKv4moN9tsHzDfMWzP43Qfjg84j/XeId4c5zlJc8UOVmMc2wvi
Yn0xN/veHzHP4ThMMrvwz8NrGGYT2F4S+2Du3u97ftLLWA3HcTLbAvN9LWkh
TWd7WM4Ub3veGx5me8b9Q/U1VZ3IXYnxB0k7CtLfbeN/cLNPVjvuWJSb/Xoa
6+sYPYbTs2xvYPQ4Ts+xLcbmCexmsr2J12jMZrEtMesnMZvNttS7xnhbcHg7
aRleT3lv6C2+cXxz8RqH2USzn+8cNZab0RSzeJHtHbzGYzaPbYU6E9R6ie1d
HCeqP5/tPRwnYfky2/vunIzvArYPzPhRs39GX68mfYhFsNmE3zd6fFrvj8l7
FufV4sM2Xf4sPN7E5OOkT+TMwDX0UdIaTJ/F9U2xa53XyJ+t7hIc1iV9ht+n
zkvkfYrlbP45zm95Z7xrFX5zMJ2pj8XOUXs9jnOxnI/Huxh+nvQFdi/i9w7b
BrHz8HtRreXy49eqr7CK9Wu9vaK/Ze7/HNP5YreY24eYvozrK84f0Ebs3lc7
zr/j+htu36qzQt8bvP8NM/9QzBa8Frn7I7atYl8vwum7pO+LsP+EwrYNp+1J
O7BZgtcSOWvV2qrWWnk/YBJ5O7Fcqt6n/FF3obd9iONb8haxfeSdu5J+xmOZ
OYd+TPrJPJZj+QXbLuxW4PelGr9g8y6WKzH4xux/TdrN94vzMv2tx+g9seu9
70fMIu9/6r3PFn8niN/Xr3XH/zBdhe9ms9uT9Dcua9iK5WXfwUF5Gds/sdxi
/xdeH2O2xsy2Oke9f4rMfbt1LQZr5W+jiP2XL9b/9LxR39vZ4n+4utX9ezBb
h/cO/ty8jEFBWvfJy3itN6tQXrLl52W8PscsFLbIiblGjYj70nfwMy5fYhPz
3j/5D8jLan+GR8TFnfvmZX2H/8C8LCds++VlXGON/I147rZ+hfsm7/+NosZB
+o6/zx+Vl83gkLQWz8tYRs7vuMb6R27m22Nex+VlXMvnZYy3muEecSXyMnbf
4bcdj//wOTT5D8vLfBEb5z/18BeO34vdIT94BM/IOzwvq7cN45hrMNjljvCX
NNOySeVw/AnLYFIq6Yi8jONOLPPYYi4/YVzIMuZ0dF7GZRc2+7CVxqCM+37F
dj+8fsYsR1+lcI28Y3wnO3wru3HbH+Nj1P3LnLf4jnf7Jk5Luiipfl42vxNw
PDMv41TTz1+wPwj7Y7H7A99iciL3RPawHYzRHpxi9hWSKmJ2knMJeXH+B/ND
8foHszJ6rZ6XMfoXpxPlF8c1alcyq4graf75GMTsKiedjFcuZkewVRGbh2Ou
WqXkx392dQpusZ6at3fWZfCp5I593H20b2l/fPflKy1vX5xC1byztNrV5MS7
T8/Lfv6iVjn9HaHnmHUxzMqJPQOvAzE7lq2G2INwPFje8Um1cIi5Xuo7aIRT
7aRzsCshLpifLb682jWdz1avorxzfQOHqncSf9T9zXd5II6HyTvQe471zguS
6uBR0pxD5yWdbx6lsDyZ7QLsjsSvqhp1sTkKyzIYnGb2FybV46vrXFJ/lTA6
Wmwl7zsPs8i7SL3SbPH73Uq/PpZ1X3DtmHRnUj+zu8TMjzPTmng2SLrYLMph
eQZbQ/yOw6y8uBrsYTuryNxr43M5Bo3ZYn8D9tc7X85/mndcJDZsV7ijob4r
uuMcCn8TDJomNcOrklmFrky6Cq/KmJ3P1tRcm4ir6juog0tVbGLeLZJaql1R
Xh13Xq3v8F8jJ2zNcW0uvxqe9ayn8Ff3/voUNa7VY/DrZAbXJbXGqzpmDcS2
wut0zC5muw7jGmZ4iRptcAtfIxzamftZGF3G1wavGu5oKOZMcedgFjx6YXx7
0o1sjc31ZKwau+tGM+uW1J3vfFyCSfukDjiei9GVbB3FnleEZcypMy4XYNOM
7SYMurrvQpyaW+tgdoW+2jtHXhf3n6OvevJbyO+ibvzclMXgInEtsaqP1SXm
1xqbW5Ju5auPZSj+z089cGyAZWuxPZ17yG+kbhvMYv5tMbsNizbybsOsEf9l
zjd4wz1JA5L6mMGN+r1Yv8MwHophbzFNcegkL/L74tUEsw5sd4q9Escm5t5e
fvxa1R+3WO8qMuuu7uvtjmbu7mzWLfC9mu8meVfjFLrbO29S+2458e6BednP
X9Tqrr8Oer7O3G/hi9h78boGs5vZBom9tginwUn3FWF/K4XtfpyGmO31mN1m
bY1fD7UHO0feA3gHlzuwvF692/ijbnxfF+m1rbhezt31Hu8ckfSwGT9kzn3s
h5tHeyz7so3AriN+/dQYiU0nLLticI/Zj0p6hG+k83B1+2DUWeyEvOz7G49Z
5D2q3k1FuIbtMUy74jqA7XEsepjhQLYnvL87fveyjRZ7c5G5P5k0xnm0863q
3mfW45KexuhWnEJPJY3FZKy4e/T+aBFmQ9QaI6cX31B62hzu4Iu5TMYh5veS
ec3DbRL7cPvJWPeVM4JtippR70Ec78Syv/NI54h9xjnWqXrv6X13yRnlfXdh
FpqWNJ1vqvOjbDPwugezx9iexWsAZo+zPYfXQMyeYJuJ0b04jWabheMg7J5k
m23mg819DNvz2N2HRTCbm/SCd96PZWgO3xC+cXgNwexR75/uHDVeNIeRZjGe
bR4Gw7B80DoxaYH5B7N38V6B7cvsk+0X4DVCzhS2V4qwfIbC9qr+FiYt0lPY
XtP7KLymsS3U41C9P2Vmc7B7FL/nzXMpDouT3sTxMSxDrye9gePjWD7Hthiv
0ZiNFlfINeotMfexWMxmW6q3MXoZ6zzHO1YlrXZ+K+ltsU+qMZdtGXbj8HuB
bTlusb6D1Xgc57GtwG8CZhOt85M+MP8F8p5W7yuMv+R7X+zL9guwmyL/eW99
yzliV2K40jun4fqa9Zki3KdhutA8PsQvfIsobB/hNQOz19nW4PUsZm+wfYzT
czguZvsEu5n4vcm21txn4beE7VMs5uCxlG0d2/Pe/hbbZ+JiXe/9m5I2YzcX
v5jTxqRvzP0FLEOfJ32B44tYvsO2AcN5+K5g+xLXl/Cbb33PHSvd+SvGv+C5
kX2GWb+OzStyVsrfhN+r3rTM+6LXMvnp7xRJ1ZMOSNo/qWx+Vm8hfoux+dj5
26Qt7luE5UdsW8W+XoTld0nfO291flPdT8x+e9IO7N7EL7Qt6QfcfhC3yts2
YbdUjU/csw3Ht7D8TO2d3v629y93/px+TPoJr+WYfcG2C693MNvA9rNaO+W/
K+5L/N7F7Euxv7CH7Wu9L/G+37zpG2z/Z/+NffiDT3wH++VnsWH7PS/7+Yu5
bKaw/YHXasy+ZfsTrw8x28L2F0Yf4bSVbQ+Oa7D7ju1vM//Y3L9n+we7T7AI
Zv/l5fz/P1rwKd8P9C/fOjPYjtc6zOLdB+Zn79yhRm5+NruY4a9mH7a8/Izj
eixCYcvPzzh+jmUobAX5GccvsAyFbZ/8jNcGzEJh2zd/L8tfKGz76S/6PEhv
0dfuvOz8O05l/XzFz9x674ze4+fsNZw2+wZ+N8eY56H5GYdD0lo8P+O4GctQ
sWQ7OD/j+C2WobBFzndY7rFuKcI16pXIz+b+AxZxZ9ji3m24/sO/DbPdvsX4
NSPOh6X18Pws9js1olbYSuZn7Lbjl8NWCstYj8jPeO3ELI/tyPyM14+Y5bMd
lZ/x+gmznb6PXFzDfzSWsZbOzzjuwvIXXIPfP2Z8GMYRewyux+C1G9PCn7/I
D3/5/Gz+wfl0v3bGr6XxLRzLfpB9xP6BbTF5YTsuP+P1B2YHsx2P+5/YH8J2
Qn7G7i/8irOdmJ/NfQ9+JdhOys9Y/IvHoWwVsPsHv8PYKmIZa6X8vd/lt/hF
rZLmdGpSNRxzsAxVTjoZx1wsj2CrgmMelkeyVcUuH7+j2E7BsQDLo9lOxWsf
vfzu560Ydvvid4we4/e5/fnK+AYr6XWbOcQ8DsCxXNL4pGFJQ83/YAwuxrsB
tjWwLG9fU2yxIizPTDrLuaZzcXVPMPvaSedgVxy/0NlJtXCrJS7ec1FSfewO
VeME95yN42FYVlT7XG8/3PtLOVfGqBROofOTLsDoCJyqsNXB6EicKqt3nnP4
62IV64XYHcVW2vlUvZfwvlPF1sOtnneWwfI0a2n+snzVqT4u5fhOt4/1jKRG
Zl9TrzGPK3G7hL2mfSPsjpNzJtul5ny8WZ/FdhleJ5j/2WyXm38FDGqxNWY7
CdPabFeIi7WJ97dMusaMK+o75tQ8qQVW8Z6r7E/G5DznyrhV4auDU5yvy8++
6VZJzcQ1FRPnqzGrimVdtuZ4naKX6vjUx+ZU/OrpsSV/NW86V3+VzOBEs6nv
rdcm3ZB0e1IvTNpg0IC/Fa6ne8MZ1oZJ1+PSiNqwxUzbJ3XA7kxxMft2STdi
dxZ+l+mjLW5txV3kbS2xq6XGpe65AcfaWF6hdntvP0cvV+IWs+hk9lexd7Rv
isv5Rc6FP5/NsCqsdS4+ddlvEtM56Va8bxETvi56P9v7LpTb3PsuxC/UNakb
XxfnlmzdsbsIv2vYbsarPmbXsvXAqgGOrdhuwe9ivTa0ts7PvoUbzLcjhndi
exv79fa3Y3epnGB2R1Jv77wMy1AvvsZ87fBqjFlL7+/mHDX6JN1thnfhGra+
ODTRXwe9FvLshGF/TDqx97PvjFfTIuembDfh1gWD2N+P63352c9BdTONmHsw
aiG+K4V9gB6v0PuipBlJ0/OzXwPj173yGA5Muhebwe66FuObKfyDcLwWyx5s
g/G7Ln/vN9hKvdZsPc29LRYxx+FJI/AcgmlbPHt5x2PeEuf4vbrw9+xe4u9g
exC7dvj1ZnsIt4fc18E8+tKd+Xu/s35YjcK8P/vDfO3d0YcvbCPF3oRlf1z7
2d/Ffrs3DhV7N4ZjMX7K+W7vjvVR+264DqCYyePYdcNvINsTeHXH7F620Xjd
jNkgtidx6oHjYLYxuIXvPhqjz55899vH+gAWvfAIrpOTpnj3094+1L7wz1+x
TvDOR72tt1rB7xGzuMvce2MZmpg0Ccc++A5nm4xdX72MwLGQ50iMprljFPsz
fKOsU+37O0d/z5r1KLl36fERb5iL6xxvmKDXbvgV8hqgzlhznWP2s5JmYzcQ
v9BzSTOxuxe/0WyzMBqM02BxhSyj3vNm/6K5P8U2B7/79TJPzxEzw5umm03w
fEXsfWqMV3Oe9w6TP4HtJe+PdT5GD+E0ie1ljIZjN5ltAS4j3P2QOyY6P8O/
UI/T2KbiFftXnR/wvnHiwvaavEfxm+ZcuB8lbgb2EbcM47fZwvcsvYHTE9g+
R4txGs03k8L+Jk6jcZzFtgS7J/GbzbbU3Mfg9zzbW0krzHkerm/pc5y3z7WP
9QXzfT/pg/zs1/v4vbA7nu+o85oZrjL3Ce54yX3v4jgRy/ls7+E4CcuX2d7H
brL7Q6/k7/22XsXtw/zs962F7Cv5Hjfr5/Q2lX2h82r7ac7zvCV6jf9+L/57
wfjvihaqH7xfV3OGOc8y6+DwSdJa/tcx/tx3sF4fb2C5ROynzp+o8by6S/H4
TG7wWee8VN467J7nn+v8tpnE+77Fb64+ot+Z7nqBbXnSl1isMOeXzT/OG/jn
Y/kuhe0rsfMxe0f8CvlfJ23Mz76blfisNu9V7OH/hm8B24fYrJa3CrvYb3Je
bd2ctCXpI3kfmf+iIudF+ntXzzHzj819jfiP7N9w/th+jf1i58jZhl8h+7UU
9h9w2pG0E5uleC2VE/x+ys++jx+dI2873jvZ35b/mfzt6r7nHV9j+La8b81l
M/8vSb9av8IsZv2/pN+w+pn9S/tfsHtP/a/V2I3N+5gFh9/d9Y3zSr7d7liu
v8/5PhC7nO2LpL+StmK4Sb3gem1B+vNGUquC7F1h/8Od0ftByV5QkM0xP63f
Y/Oxemsw3eIc++/Yt4r9HrPv5K1x/rcIx3Vmvg6n7da1Yn4Q/x9frPEP5f6u
383yw5arz4/dud4dOyn8eQUZg33Tul9BNqPPfS9fWHflZ75CtjGPAwuymcR3
EzViJl/j/isuX2PzmzluUjv6+FFc1N0/qXjSHnwiJ2wHFGRcY437NuH5m3Uj
7lG7WEH2/j/N4eCCrO9gtk/S32awR8y34v5yPqQg229x3iM+2P2NXZz/sf/b
fpvzDjxi7sHn8IKMzdG+m6PU36PmNvn/YrEDj//klizI6v2A8RY9/+mO8Jcq
yOwf8pUxy/1wPSLpSN9szDsfpyP1swvf6K8YnuULsm/hGHX2sy+DQbmkY3HZ
jc1uLPf3zZVy9/7yyvpOdvpWfsPtQIzLqvuz7zC+sYP0FGzrpLVZ0tW+kxK+
lRK47sH/uIKM+yHW4+3/9D0cKr6EOuE7gf0fTGP2lcz31IKM3ylJh4k51P7f
IvzifLg3nJ50RkHGKLiVdNdfvrE4VzajXHGlfKMF7ovZnZxUBa88zI5kqyo2
H8c8tY5QJ2qUxil6qVGwd9bl3FfZHdXNvwz+B8oL5qexH4BlWarunWXEVJdT
vsg3dBx+0Wvwq2vWh+BSK+mkpBPF15RzvPVM+4OdT5R/tn1x55PwK4FBRfwq
4HSo+JPEnKDuWWIO5Sspr7Iah8uvaK1g1lV9D/UKsu/jQjO+OKmh2R8lJuZ7
ftIF2B2BXxW2OmKPLFK3rpql1TrVPtZq5t7AfTH7+ubfgK+6N5zv/hr6usT9
pdjLYVmYU1+NEwv2/nwcK+4MLINF/Jp5tjmehUesl2F4Jl6Nk2rjHPZGfLXk
XC4vbJeyn8h3rrmfQxXUqm1/kvja9ueIr+AN8Xt5K3Uq8Z2Fe9x3Hvu59pWd
T8Ghrvk1xamKmV1AYW8mtgqOldU6X378WtUcy1hbmPG1emxZkH1DLbA9pWDv
t3Q6vtX46nnPxXKDZeukNmLCfxF/xF2H+xnY19F3MxyuN/OGYltjVEPtS8QV
crvU3C6zv8H+LOfLndsmNcHjioLsG6jFfzm2EXdjEX9jvnZJV2LShP0KjK9Q
M/bxa8Wxem0i/hznmvzxzs5JNyVdhUmw6W7u3diuwrKp+GbY1cHvajW6YFMX
y1vMrRV+XdVsLrart5ynv3ryW7jzPP6L9HONfT3n4Noz6TZ39HBn/D0h/i4Y
f7+4HodL9RL+W7FriGlrtp44XqJ2n6T2OMT5+oK938Xt6rY33ytwvYy9nfMd
8uPc2xtamvGN+BXGRl4v9vZqdlC/vf2Vzh3NKM6d7DvaN3W+1z0D2TrhF7oL
s45qdMCxGXtz5y7OEX+3c6z36PtyvbeQ09X7WmAdGqCHrvIGmEP0dnPSfeZ/
i7kGzyF4Dma/xf4+vK6Tcyvb/Ri1xrEn2wN4tVH3NncUMuxl7sOT+mIe9qF8
fXB7CMu27L2dH7Rv59wHv97e183b+5pxe3PoYhZ3sve17+jcz/5O+07O/e37
2Xd2Ho33E2z9MQs9UoTdTfahR/UQ/T0u9x72x/TeFa8BbI97Y19vucM8hmHZ
XR8LkqYkTcbhqaSx1vsxe4BtHLZj2O+zfwqvnmJ74l3IdQj/g/oY5r4ReIb/
aSyH6XOo9w7wlgf5Jogfiv9DfBPtezsPd57knjvNYrhz7B9mH2Hfz3mk/cP2
/Z2Hm2nUHcU+ErtR+I1yDt8svGfqPXoej+kj+A3A8jGakfQs34wiLMP2HGYx
lyfoOfUH8Y22j/XJpDlFeAa/uUkv4PY8+1P2c/C6X85Ytrlm/oAa4/Aq5Dbe
2ybi8xL7i3wTrPPshzlPxGqCNz7mnZP45idNN4uY12S+l+2HO0/BagT7FPtn
2KfYj3Seav+M/SjnafZT7Qt5TrcP283mHDNegvGbepyOWej1Im95yHvi97H4
M811fBHzBoaxLsbhLXMPTsuSluP5BNYzxb6J8Wh9zJH7NnvYZuM1FscPkl4p
yH7uX8Doab633fe0nEL/PLw+9ea17O/wvS1/DvZhW2E/wXmBe6fgF2zfs5/k
vMD5ffvJRWInqvcqblHrNazCtsjcp4uP2Hf5psqZIe51udP4Fsqbxj+dbSHb
a3LWFOH1rP37enzPrGeZ0RviP8brOcwWs30idiaOs+UtTVqPw9vYf570hf07
Zv+CmS/D/DPxb6q91vkz9b5JWol/Yf5y+evd8Yo5TXHPCuw+8v5F8uPNG833
JXHvOX9lP9/5feev5S5gW4nNK+wr7T90T8x+tdmvolfFRW8b3LtKzKvuC9uX
6hTWWG3/mrcs4o9/Hyi+6R8Ksp+tx3FaYo5rMfwOs8W4fkxh/17s4iJz36bm
UrU+tY91nVn/mPQTPjsx+JFvvVrfq/WF2F1J3+p9dRF+hTk71dgi5luzWq7G
BrNZYf+z81fWX+zfdf7a+Vf795w3Ou9O+i1pU0H2fW3E9mvnD9gKff8TuwrH
wp7eEbOJfbP3rfKG1Wyb2SIu/n2d+PdY4t9b2YJrvPkPOZvN7++kf5K2Yhlx
8W9CBfv/2LZi+Z3473H8xPy3qfEvhmvx3WWGG3CNmjv4/lU/anys5jr52830
KzPfYBa7rJ/jvVW/W9zzCy6vs0fvf3rvH1h8Y86/m8Em9t/t/2D/Xe4W+X/Z
/2m/1Xm79/xnPnvMaI+Yv3wHX3vTHnFb9bGR/wdz/Nf6vZnuwCM36f8Aqag/
ew==
            "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1: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
kw3KcFvw+0jclHq4KoUcWf1DhP8BuAymVw==
       "]], 
     GraphicsComplexBox[CompressedData["
1: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
FfUE557hinqCc89wRT153xsX8mSce4Yr6kmfce4ZrqgneDTOPcMV9aR/MH81
v3HuGa6o5/H7AuoJbu8zqCe4vc+gnrzvjQt5Mm7vM6gnfcbtfQb1BI/G7X0G
9aR/MH81v3F7n0E9j98XUE9we59BPcHtfQb15H1vXMiTcXufQT3pM27vM6gn
eDRu7zOoJ/2D+av5jdv7DOp5/L6AeoLb+wzqCW7vM6gn73vjQp6M2/sM6kmf
cXufQT3Bo3F7n0E96R/MX81v3N5nUM/j9wXUE9zeZ1BPcHufQT153xsX8mTc
3mdQT/qM2/sM6gkejdv7DOpJ/2D+an7j9j6Dev55+b6AeoKjJzh6gqMn72d2
3xsX8mQcPcHRkz7j6En/nDwaR0/6jaMn/dX8xtGT/nyfQT3B7X0G9QS39xnU
k/e9cSFPxu19BvWkz7i9z6Ce4NG4vc+gnvQP5q/mN27vM6jn8fsC6glu7zOo
J7i9z6CevO+NC3kybu8zqCd9xu19BvUEj8btfQb1pH8wfzW/cXufQT2P3xdQ
T3B7n0E9we19BvXkfW9cyJNxe59BPekzbu8zqCd4NG7vM6gn/YP5q/mN2/sM
6nn8voB6gtv7DOoJbu8zqCfve+NCnozb+wzqSZ9xe59BPcGjcXufQT3pH8xf
zW/c3mdQz+P3BdQT3N5nUE9we59BPXnfGxfyZNzeZ1BP+ozb+wzqCR6N2/sM
6kn/YP5qfuP2PoN6Hv9+Z+sJbu8z3Nl6gtv7DHk/I7f3GZILeTJu7zO8wu19
hvQZt/cZ0j8nj8btfYb0G7f3GdJfyU8Yt/cZ0r/o3nnPYw+8/X/2QqcefXLn
6hfs/3/xz19zz3/e9v1/rnW/XHv877cG7z38pcPnTmlPdPd7H/rhU93Zbv3U
j2967Mv239/Gye5nL73umz99z1r33CN/u+7rD8r3iW+978mfP3Cye/ZDVx9+
5Kz2NA995+Pv/s1HX+m3ebK77tnXfn79qdI9uXrbV276mv798p/ffPK6J776
l/jv+4+H37ga/KOX//G764+0l3j/Xa/eve+50r358Zd++8H/s6f41Xfrt//0
Yul+8LF/3doFP/iOp9/04u9L918SoGGe
      "], {{{}, {}}, {{}, 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"], 
            Dashing[{Small, Small}]], 
           
           LineBox[{1284, 1282, 1285, 1286, 1290, 1291, 1289, 1294, 1293, 
            1298, 1297, 1299, 1296, 1295, 1292, 1287, 1288, 1283, 1284}]}, 
          "0"], Annotation[#, 0, "Tooltip"]& ], {}, {}}}], {
      RGBColor[0, 0, 1], 
      PointBox[{15.744658637308268`, 140.43122884144134`}]}}, {FrameLabel -> {
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(log\\), \
\\(10\\)]\\)(\\!\\(\\*FractionBox[SubscriptBox[\\(M\\), \\(200\\)], \
SubscriptBox[\\(M\\), \\(\[Sun]\\)]]\\))\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(c\\)]\\) (arcseconds)\"", 
        TraditionalForm]}, DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "M10DefaultDensityGradient", "GridLinesInFront" -> True}, 
     PlotRange -> {{15.4, 16.}, {100., 200.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1: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
DQ78hTY/ereBRGxETW0GpfMZO5sO/GZjG73E6/4iEuKz1rwOSh9xj3ZVyX+g
dPNhl/rFCQLx/vQl8x5Q85lSyZ8Tw0Z2Vt13y14CEpNnt2lS/lKyd0XyiBUb
TpGW5aoVBG6fnmPrnkjC5NZs1PvVbKxy6w8TzaL8kx0bcC+e0t8w2y9zlIV2
o+PGo9cJ3HORfVBP+ZrPlg7nK7ks3FDmL3pL5eQq2tOqX9dJCAa/3efqy4KR
2Pn2uzYEUux0xjZFkbjd9FjHSIeFOZyZu766BGTa60SPUnpTXnNLWVmIhdf1
UUf3KRBINbfbFBtM4o3npRViDUz45YorbhQlsLaWsb+S2uO+UjdBTjwTajH3
2EIEH+m7z/mOUz4+JGJJ1tszwfJSKKC186FYLnRHwY+En43uQK4CEw/Nc/1K
S/nI1ox/beVD8SJLqS6Gw4CDmoZ2AqWDDUXytL/54TvjVJGbz8DWrQWRO/34
GJG7zQh2o557ZM9rtg8DEgYZifq7+NCOChoepHJIuWz9yw3bGJi2u5NtspCP
eMJlANSeBVeLFp74NoZ+r+hiqx4eONam3ak2JGj+nCcZJWOoDAmuPpzJw+5y
9bZZCxKvehqzhv3HkJHg23XCh4d7iquaHE0p3WsWpMnpjiHqsRvjtC4P49Fz
aisMKJ4kxiUfmaHDs8xh6oIoD/9OsN7J7SJh9M03MbmSjn0t++eFdnDx0L6l
PFibxNqDNnG9YXRspe+RvJ7GxY+qkleDlN//KtoZI2VAx4ppTaVbXlxYbEx9
js2UXy5dHWUtQsf0gk07UnZy8fhmZH7qRhKFPn9Cb9WNYkBO3jBrLhcC06dy
ZteRuN48GNQaPYqKbRI2+S0c2DlaZzrKkjiu9u7Ckn2jyDASdS1JofpbtW5q
xUoqX29knjUXH0Wkw+9zle4ciKgpJsktJ7GSF3kqum0Ent5frtRROnC8veB2
MMX3ryYe7nUJIzAPp99uE+Cg5PfX2EERKs9yTF1EbEew9U5PVn8jG0uO912H
IOUrompHDaRHIJHb+JJ+lw23hqorqb8JhLqJHwrvH8b028qP/ONsvFXPCZmd
InC4+qtV1f1h9Le96JzawoZk0s1Ax3ECH94uTb5zeBjuF78pVFH91iT/42pb
LgG5C0H6m6SGIdLR+Tsok4W4vmSTRjoB/81MZmXrEB5tLu7aactCz7yz/vo0
qp8xD/xnHTMEo+jEwkkxFuS2GT8u7iagllamwTEcApNx/nphGROujrLd/7RS
/mm3of/ynCFE7rY97uXNRF70pPDDegI1axWFNlwchNIDTT1liteTJfUakh8I
BMf/2G/Bp6H2h9RKegcDuvQ0l+hyqkcINaf4H6PB3Xp6PDWKgXDxC/ECJQTY
vpns9O7PEHnW0+CgzUC9rnnVuUICD+j+OxrNPuPRwtIsKf4Ylnqs+8LJIXDQ
en/4t6oBGLnfC25PHYPd7R+yTlTfEa1WbJHVHADjvf+hWMsxpFY1m3emEHi7
4+ca46f9iJSz32YqPAYGPyvIJJGA76NmjzNr+6EUqL1I5BUdqquCcitiCSiv
zCpOos4l1V2rmO886fAztOzTuEbg89UAoQ8L+uCq/qvysgwdb84qiz0Jo3zu
7+uG9EL4v/4k7ZZRCKbOaMoFETDyXH9fcqoHWew3flNhVE9t6HBNOEfgd99P
Nk72wMAgZV/R9lHc/P7ktpg3lZemLTs8hrpBTwtSPs0aQfe60A+X3Qm4lmWF
x1t3I+L3YUGV5BHIWthOTFB5bKUr/I9EfRe+5bqIbTQaQZB1/4IOqldeGTda
YqrbhY8hPmq3KH7ltMFGxZZAcfb1idD8TiRYX7L64z2Mrv2ZaSGWBJgOTd2v
5DtxXOX6Rbe5wxBqEuV2mRNYuVS8jIzvgMZs4v3Wu0PYYnJquyqVmybVlmlK
wh0Q6sh4p6M6hCM1rcHhewkEBt6OOHKhHdkHnJtNwwcRvXdHfS8IPN3S457A
boPBrwBp+ac0vKpKktiiQ81zbJV5g0Mb6JkJLpMdnzGmN3s0cgeBxclHtgp+
akX4vvy82j8DWFbmkjOwlcAei7QVWrtaoTxd8z1FaQDQqp1QVyXgJzz6w7uo
BTUPh/XP7O+HV/EmvWvKBLJfr6dlK7bA1fRXtMHFPiRti7s6uI7qN4MtEW9U
myH8TaJL+mEvagq/tW2XIyBuYmO+cdknZD5QkyfqejCpai8Ts4riyYv+FXem
GrHX2Njz3ddurM196zZCnQ87ZZ1pc/sbMDLu/CJxdTf2Ka8r2rmUwM5rjOyz
FfUISw6c8dzbhcCsqN//UT0kaeKk91BGHdYa3DbGqU48VuAZjokQ+HNkXHPf
1VpUEvnxyxM70JVqEadDnUsda88LlHnVwOlu7QDzbTuEZF72x83w8U79d+3G
A9WY1R9RKmO2YUuStBLrB5Uz90Pj7mz/iAfcXz43xdtwROqyjx51Xvk/qn3O
Dg==
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.500000000000001, -112.49999999999999`}, {
                7.500000000000001, 112.49999999999999`}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.500000000000001, -94.37919463087248}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -94.37919463087248}]}, {{
                    7.500000000000001, -56.627516778523486`}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -56.627516778523486`}]}, {{
                    7.500000000000001, -18.875838926174495`}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -18.875838926174495`}]}, {{
                    7.500000000000001, 18.875838926174495`}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    18.875838926174495`}]}, {{7.500000000000001, 
                    56.627516778523486`}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    56.627516778523486`}]}, {{7.500000000000001, 
                    94.37919463087248}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    94.37919463087248}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.500000000000001, -109.47986577181207`}, 
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -109.47986577181207`}]}, {{
                    7.500000000000001, -101.92953020134227`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -101.92953020134227`}]}, {{
                    7.500000000000001, -86.82885906040268}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -86.82885906040268}]}, {{
                    7.500000000000001, -79.27852348993288}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -79.27852348993288}]}, {{
                    7.500000000000001, -71.72818791946308}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -71.72818791946308}]}, {{
                    7.500000000000001, -64.17785234899328}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -64.17785234899328}]}, {{
                    7.500000000000001, -49.07718120805372}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -49.07718120805372}]}, {{
                    7.500000000000001, -41.52684563758389}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -41.52684563758389}]}, {{
                    7.500000000000001, -33.97651006711409}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -33.97651006711409}]}, {{
                    7.500000000000001, -26.426174496644254`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -26.426174496644254`}]}, {{
                    7.500000000000001, -11.325503355704697`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -11.325503355704697`}]}, {{
                    7.500000000000001, -3.775167785234899}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -3.775167785234899}]}, {{
                    7.500000000000001, 3.775167785234899}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    3.775167785234899}]}, {{7.500000000000001, 
                    11.325503355704697`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    11.325503355704697`}]}, {{7.500000000000001, 
                    26.426174496644293`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    26.426174496644293`}]}, {{7.500000000000001, 
                    33.97651006711409}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    33.97651006711409}]}, {{7.500000000000001, 
                    41.52684563758389}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    41.52684563758389}]}, {{7.500000000000001, 
                    49.07718120805369}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    49.07718120805369}]}, {{7.500000000000001, 
                    64.17785234899328}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    64.17785234899328}]}, {{7.500000000000001, 
                    71.72818791946308}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    71.72818791946308}]}, {{7.500000000000001, 
                    79.27852348993288}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    79.27852348993288}]}, {{7.500000000000001, 
                    86.82885906040268}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    86.82885906040268}]}, {{7.500000000000001, 
                    101.92953020134227`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    101.92953020134227`}]}, {{7.500000000000001, 
                    109.47986577181207`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    109.47986577181207`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.75\"", 1.75, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -94.37919463087248}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.00\"", 2., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -56.627516778523486`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.25\"", 2.25, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -18.875838926174495`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.50\"", 2.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    18.875838926174495`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.75\"", 2.75, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    56.627516778523486`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"3.00\"", 3., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    94.37919463087248}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.165698, 0.282261, 0.936187], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.11046533333333335`, 0.188174, 
                    0.6241246666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.165698, 0.282261, 0.936187]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.165698, 0.282261, 0.936187]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.165698, 0.282261, 0.936187], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8888888888888888`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.358007, 0.574105, 0.948836], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.23867133333333335`, 0.38273666666666667`, 
                    0.6325573333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.358007, 0.574105, 0.948836]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.358007, 0.574105, 0.948836]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.358007, 0.574105, 0.948836], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.7777777777777778`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.546319, 0.783703, 0.966583], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3642126666666667, 0.5224686666666667, 
                    0.6443886666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.546319, 0.783703, 0.966583]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.546319, 0.783703, 0.966583]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.546319, 0.783703, 0.966583], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6666666666666667`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.713848, 0.924666, 0.981842], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4758986666666667, 0.616444, 
                    0.6545613333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.713848, 0.924666, 0.981842]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.713848, 0.924666, 0.981842]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.713848, 0.924666, 0.981842], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5555555555555556`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.866087, 0.99559, 0.992172], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.5773913333333334, 0.6637266666666667, 
                    0.661448], FrameTicks -> None, PlotRangePadding -> None, 
                    ImageSize -> Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.866087, 0.99559, 0.992172]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.866087, 0.99559, 0.992172]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.866087, 0.99559, 0.992172], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4444444444444444`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.997223, 0.994827, 0.825925], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6648153333333333, 0.6632180000000001, 
                    0.5506166666666668], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.997223, 0.994827, 0.825925]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.997223, 0.994827, 0.825925]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.997223, 0.994827, 0.825925], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.33333333333333337`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.981765, 0.945724, 0.654917], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.65451, 0.6304826666666667, 
                    0.43661133333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.981765, 0.945724, 0.654917]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.981765, 0.945724, 0.654917]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.981765, 0.945724, 0.654917], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.22222222222222232`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.943297, 0.818753, 0.479667], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6288646666666667, 0.5458353333333333, 
                    0.319778], FrameTicks -> None, PlotRangePadding -> None, 
                    ImageSize -> Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.943297, 0.818753, 0.479667]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.943297, 0.818753, 0.479667]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.943297, 0.818753, 0.479667], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.11111111111111116`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.894942, 0.622553, 0.310567], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.596628, 0.41503533333333337`, 
                    0.20704466666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.894942, 0.622553, 0.310567]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.894942, 0.622553, 0.310567]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.894942, 0.622553, 0.310567], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.845274, 0.369528, 0.19115], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.563516, 0.24635200000000002`, 
                    0.12743333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.845274, 0.369528, 0.19115]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.845274, 0.369528, 0.19115]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.845274, 0.369528, 0.19115], Editable -> False, 
                    Selectable -> False]}], "}"}]}], "}"}], ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"1.631606928983505`", ",", "3.121019442736337`"}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7339267710083857`*^9, 3.7339268604205494`*^9}, {
   3.733926948422517*^9, 3.733926956907174*^9}, {3.7339270345079575`*^9, 
   3.73392706288445*^9}, 3.733927785966617*^9, 3.73392781817*^9, 
   3.7339279029633203`*^9, 3.734005223373206*^9, {3.7340052772930374`*^9, 
   3.7340052985905266`*^9}},ExpressionUUID->"94295e62-b56d-4982-8278-\
346001dd7b21"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Comparison", "Section",
 CellChangeTimes->{{3.7339266083319693`*^9, 
  3.733926609913522*^9}},ExpressionUUID->"404eb34f-45b6-4a93-a19b-\
82adf34c6fd6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"theta", ",", 
        RowBox[{"ellipticityNFW", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]", "\[Rule]", "theta"}], ",", 
           RowBox[{"M200", "\[Rule]", 
            SuperscriptBox["10", "15"]}], ",", 
           RowBox[{"c", "\[Rule]", "10"}]}], "}"}]}]}], "}"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"theta", ",", "ellipticity"}], "}"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"theta", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"ellipticityNFW", "/.", 
             RowBox[{"M200", "\[Rule]", 
              SuperscriptBox["10", "logM200"]}]}], ")"}], "/.", 
           RowBox[{
           "NFWfit", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
           ")"}], "/.", 
         RowBox[{"\[Theta]", "\[Rule]", "theta"}]}]}], "}"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"theta", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "ISOellipticity"}], "/.", 
             RowBox[{"M200", "\[Rule]", 
              SuperscriptBox["10", "logM200"]}]}], ")"}], "/.", 
           RowBox[{
           "ISOfit", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
           ")"}], "/.", 
         RowBox[{"t", "\[Rule]", "theta"}]}]}], "}"}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Original halo\>\"", ",", "\"\<Binned background galaxies\>\"", ",", 
      "\"\<NFW best fit\>\"", ",", "\"\<Isothermal best fit\>\""}], "}"}]}], 
   ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Theta] ('')\>\"", ",", "\"\<\[Epsilon]\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7334242216012006`*^9, 3.7334242884758234`*^9}, {
   3.733424329262809*^9, 3.7334243749947224`*^9}, {3.733424424019261*^9, 
   3.7334244325833316`*^9}, {3.733424565997407*^9, 3.7334245787294188`*^9}, {
   3.733424641856801*^9, 3.733424676573583*^9}, 3.733424732382261*^9, {
   3.7339270758048644`*^9, 3.7339272618495736`*^9}, {3.7339273126035247`*^9, 
   3.733927450888462*^9}, {3.733927492433094*^9, 3.733927498582551*^9}, {
   3.7339276043115273`*^9, 3.7339276835430636`*^9}, {3.7339277179203672`*^9, 
   3.7339277188149943`*^9}},ExpressionUUID->"ee31472a-3495-4112-9592-\
4116a60c6408"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAAEWnHjiPyWkApXLDpN/bSPzM7Vqxq
1l5AR2irWJZi0D+qhvLkWF1hQMnW7juLssw/vO+5c3xPY0CTwdfD72fJP8xY
gQKgQWVA6uUZfpKyxj/cwUiRwzNnQARjkwRqb8Q/7ioQIOclaUB7pauGfoXC
P/6T164KGGtAew+NC4riwD8Q/Z49LgptQH9Q3Lq+8b4/IGZmzFH8bkAlNn7P
Hny8P5nnlq06d3BAf+ZJugRUuj8hnPp0THBxQIWsn5SzbLg/qlBePF5pckBb
6RgEBLy2PzIFwgNwYnNAuAuKMsY5tT+6uSXLgVt0QIz8VNVO37M/Q26JkpNU
dUArSgAvIqeyP8wi7VmlTXZA+ABsUbSMsT9U11Aht0Z3QD1ne7A4jLA/3Iu0
6Mg/eECeflrP+USvP2VAGLDaOHlAXTPemJeZrT/t9Ht37DF6QNtr5XStEaw/
dqnfPv4qe0CFRqUyR6mqP/5dQwYQJHxAkxpYAv1cqT+HEqfNIR19QCnCGVnc
Kag/D8cKlTMWfkAljtQ0VQ2nP5h7blxFD39A57XZ0SoFpj8QGOmRKwSAQNt9
1BtnD6U/VPKadbSAgEDeJHhNUCqkP5jMTFk9/YBAFAKSUWBUoz/dpv48xnmB
QALi2I89jKI/IYGwIE/2gUDXVOfhtNChP2ZbYgTYcoJAE1q3erQgoT+qNRTo
YO+CQJkcvZVHe6A/7g/Gy+lrg0Dx5E6WJb+fPzLqd69y6INArnvP2qGZnj92
xCmT+2SEQFUJtrKghJ0/up7bdoThhEAZaChN4X6cP/94jVoNXoVAn/AwUUGH
mz9DUz8+ltqFQIF6EWm5nJo/a+YniA==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAAEWnHjiPyWkCcvj3yxRPTPzM7Vqxq
1l5AecieEUxCzz+qhvLkWF1hQJ6TnebMuso/vO+5c3xPY0AnApFtkP/IP8xY
gQKgQWVAgYxrUNwFxz/cwUiRwzNnQBDvVErEWMM/7ioQIOclaUCxF51e+fbD
P/6T164KGGtAX6t7FISOwT8Q/Z49LgptQAlz3ZaLt7s/IGZmzFH8bkAlbRB9
QAO/P5nnlq06d3BAOsxI11aVvD8hnPp0THBxQEyeW3kiibo/qlBePF5pckCW
nBoY7aiyPzIFwgNwYnNAoVkjfCottT+6uSXLgVt0QPi5Ib3y0rM/Q26JkpNU
dUB8wED7a9qvP8wi7VmlTXZAMmMUbs0GtD9U11Aht0Z3QN0VzOO5ta0/3Iu0
6Mg/eEC8g7Jg656lP2VAGLDaOHlAoqqQSkSjrT/t9Ht37DF6QINdQXEFVqw/
dqnfPv4qe0CsBPAn5zilP/5dQwYQJHxAXhf9vdhZqT+HEqfNIR19QAw4xUaE
Dak/D8cKlTMWfkDxQAeDR6OoP5h7blxFD39AU8uU8IMoqD8QGOmRKwSAQDgi
ih0BAZM/VPKadbSAgECKKS9w3Z6hP5jMTFk9/YBAyIjU2U5voj/dpv48xnmB
QO38zEUmNaM/IYGwIE/2gUAkEQV64BuoP2ZbYgTYcoJAyvvkPiFonz+qNRTo
YO+CQMZbXJFp8KE/7g/Gy+lrg0BXjpMUr9yRPzLqd69y6INAFrVqwhrlpz92
xCmT+2SEQEjHVAe7YLA/up7bdoThhEBuyJV2qw2kP/94jVoNXoVAco7o17hi
uj9DUz8+ltqFQAN1PfgoCqI/f9smJQ==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAAEWnHjiPyWkASGwyAnLDSPzM7Vqxq
1l5Al7sTWQ8i0D+qhvLkWF1hQJ8jWijHOsw/vO+5c3xPY0C35IwunPjIP8xY
gQKgQWVAoilx++NKxj/cwUiRwzNnQILlz7imDsQ/7ioQIOclaUDv2tPt/irC
P/6T164KGGtAHF3vT7iNwD8Q/Z49LgptQBx0JQJsUr4/IGZmzFH8bkAxeZla
L+a7P5nnlq06d3BAEzCTU6XGuT8hnPp0THBxQAerxDoo57c/qlBePF5pckDV
GTkepT22PzIFwgNwYnNAVY9PEf7BtD+6uSXLgVt0QLXcI4CXbbM/Q26JkpNU
dUBpUwB4AzuyP8wi7VmlTXZACBRmKcIlsT9U11Aht0Z3QMxTFrMRKrA/3Iu0
6Mg/eEC0D7kxkomuP2VAGLDaOHlA+VL/AHfmrD/t9Ht37DF6QP8vtEVDZqs/
dqnfPv4qe0BKmkHiDwWqP/5dQwYQJHxA5MlgqYC/qD+HEqfNIR19QMZLvXCt
kqc/D8cKlTMWfkD2ISJ9D3ymP5h7blxFD39APJ+/WnJ5pT8QGOmRKwSAQKWt
CmzniKQ/VPKadbSAgECqWEiju6ijP5jMTFk9/YBAlwYH+m7Xoj/dpv48xnmB
QFVmX1GtE6I/IYGwIE/2gUAyD9h3SFyhP2ZbYgTYcoJAJNyeHzOwoD+qNRTo
YO+CQA06hJp8DqA/7g/Gy+lrg0BNeANzmuyePzLqd69y6INAEF9MaMbNnT92
xCmT+2SEQDFc4gIgv5w/up7bdoThhEDRZ44fbL+bP/94jVoNXoVAQl3kmY3N
mj9DUz8+ltqFQEQxj+OB6Jk/Qgggig==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAAEWnHjiPyWkAiWCDkrkzRPzM7Vqxq
1l5ApBTrTiVfzz+qhvLkWF1hQMwjbfwhZMw/vO+5c3xPY0DVIhXUI6/JP8xY
gQKgQWVAvNnnPZhAxz/cwUiRwzNnQAbYvBskFcU/7ioQIOclaUB22+LddifD
P/6T164KGGtAZXRS2HdxwT8Q/Z49LgptQBtLupT12b8/IGZmzFH8bkBt9xm2
Rii9P5nnlq06d3BA0ZMl0CrDuj8hnPp0THBxQJW/VVgNobg/qlBePF5pckCb
n5EWfrm2PzIFwgNwYnNAyP6okB8FtT+6uSXLgVt0QI6K3yuNfbM/Q26JkpNU
dUBXPpeyPh2yP8wi7VmlTXZALuq9VmzfsD9U11Aht0Z3QJV+rnzpf68/3Iu0
6Mg/eEChzx2Ei3atP2VAGLDaOHlAbu3xCpCcqz/t9Ht37DF6QPwyuZma7Kk/
dqnfPv4qe0A2p/mnAmKoP/5dQwYQJHxAUr0curn4pj+HEqfNIR19QE05kFs1
raU/D8cKlTMWfkCpUblpXHykP5h7blxFD39AmhwrMndjoz8QGOmRKwSAQOCr
/fUhYKI/VPKadbSAgEDje0xzQXChP5jMTFk9/YBA7f7eI/mRoD/dpv48xnmB
QG9W2dhFh58/IYGwIE/2gUBRAXUFkAeeP2ZbYgTYcoJAHdUatDWinD+qNRTo
YO+CQAgygdrjVJs/7g/Gy+lrg0AI28mIhh2aPzLqd69y6INAiCKmMkH6mD92
xCmT+2SEQA3XawZo6Zc/up7bdoThhEDdXdcpeumWP/94jVoNXoVAkAGhuhz5
lT9DUz8+ltqFQHcuZHYWF5U/49QoEQ==
         "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {98.5406086990708, 0}, 
     PlotRange -> {{107.7834202716224, 699.323360914925}, {
       0, 0.2980818620335215}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {98.5406086990708, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"\[Epsilon]\"", TraditionalForm], None}, {
        FormBox["\"\[Theta] ('')\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{107.7834202716224, 699.323360914925}, {
       0, 0.2980818620335215}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Original halo\"", "\"Binned background galaxies\"", 
       "\"NFW best fit\"", "\"Isothermal best fit\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7334242558678284`*^9, 3.7334243111301355`*^9}, {
   3.733424380007598*^9, 3.7334244331161575`*^9}, {3.7334245518270965`*^9, 
   3.733424579193777*^9}, {3.733424642235816*^9, 3.7334246775962934`*^9}, 
   3.7334247330655923`*^9, {3.7339272428304653`*^9, 3.7339272623966494`*^9}, {
   3.7339273480004535`*^9, 3.733927370520669*^9}, 3.7339274142927275`*^9, 
   3.7339275037208414`*^9, {3.73392761488031*^9, 3.73392768709922*^9}, 
   3.7339277195962133`*^9, 
   3.7340053263285055`*^9},ExpressionUUID->"95466ec1-2324-4083-b058-\
4b383bc59ba3"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{2160, 1316},
WindowMargins->{{-11, Automatic}, {Automatic, -11}},
Magnification->2.,
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 981, 24, 204, "Input", "ExpressionUUID" -> \
"592b968f-f867-4395-8522-b4d5258dec75"],
Cell[1542, 46, 2347, 64, 396, "Input", "ExpressionUUID" -> \
"f5bdf5c6-4cfe-421f-bd2d-54512922ba8b"],
Cell[CellGroupData[{
Cell[3914, 114, 154, 3, 140, "Section", "ExpressionUUID" -> \
"62366c01-2aaa-4f35-b2df-32dd4f11da81"],
Cell[4071, 119, 2003, 55, 322, "Input", "ExpressionUUID" -> \
"e013f2d9-86b9-42f5-a5dd-af3f4ebc30b1"],
Cell[6077, 176, 2977, 83, 663, "Input", "ExpressionUUID" -> \
"5d6bf19f-594d-4487-9bf8-a12e7ef01b9b"],
Cell[9057, 261, 896, 20, 128, "Input", "ExpressionUUID" -> \
"cc6b621e-3afe-4629-a66d-8158df5b2b82"],
Cell[CellGroupData[{
Cell[9978, 285, 330, 9, 91, "Input", "ExpressionUUID" -> \
"a89eecea-1ec4-4dbb-8afc-13be35d03568"],
Cell[10311, 296, 174, 3, 86, "Output", "ExpressionUUID" -> \
"0aa72ac5-9834-42e7-bbbe-64f9961e9dfb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10522, 304, 953, 21, 93, "Input", "ExpressionUUID" -> \
"39df82b3-c5c7-456e-92d5-fd7688fc42a9"],
Cell[11478, 327, 641, 13, 86, "Output", "ExpressionUUID" -> \
"7dc592cc-79a8-4b28-8b16-120a362c140c"]
}, Open  ]],
Cell[12134, 343, 3022, 52, 93, "Input", "ExpressionUUID" -> \
"4df3c5f4-737f-4963-9498-b40e65e7bc21"],
Cell[CellGroupData[{
Cell[15181, 399, 2255, 54, 344, "Input", "ExpressionUUID" -> \
"829c9167-102e-4232-ba52-208726cc983a"],
Cell[17439, 455, 154696, 2644, 815, "Output", "ExpressionUUID" -> \
"eb0a7185-666b-4228-bf67-e76773fb1c2d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[172184, 3105, 160, 3, 140, "Section", "ExpressionUUID" -> \
"70b590de-c90c-40b2-a388-ee7ec4efd501"],
Cell[172347, 3110, 1964, 53, 284, "Input", "ExpressionUUID" -> \
"2c4907fe-90f8-49b8-93dc-659eabc1f77d"],
Cell[174314, 3165, 3434, 92, 645, "Input", "ExpressionUUID" -> \
"eae9ee97-c3a9-45a8-884e-56da49ba6c95"],
Cell[177751, 3259, 575, 16, 128, "Input", "ExpressionUUID" -> \
"76ccfc65-0334-481b-b830-7fc1271992a7"],
Cell[CellGroupData[{
Cell[178351, 3279, 920, 20, 93, "Input", "ExpressionUUID" -> \
"23c8fb61-6ce9-452c-a67e-ccd97de0a0ed"],
Cell[179274, 3301, 625, 13, 86, "Output", "ExpressionUUID" -> \
"10b93df3-d252-4210-9fef-294afe082e4a"]
}, Open  ]],
Cell[179914, 3317, 3134, 52, 93, "Input", "ExpressionUUID" -> \
"05bf1e7d-3087-45b1-82fb-40916c74a73a"],
Cell[CellGroupData[{
Cell[183073, 3373, 2432, 55, 404, "Input", "ExpressionUUID" -> \
"5b6dd1f6-193b-4a23-81f8-41355294d604"],
Cell[185508, 3430, 105186, 1863, 791, "Output", "ExpressionUUID" -> \
"94295e62-b56d-4982-8278-346001dd7b21"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[290743, 5299, 157, 3, 140, "Section", "ExpressionUUID" -> \
"404eb34f-45b6-4a93-a19b-82adf34c6fd6"],
Cell[CellGroupData[{
Cell[290925, 5306, 2887, 71, 349, "Input", "ExpressionUUID" -> \
"ee31472a-3495-4112-9592-4116a60c6408"],
Cell[293815, 5379, 23227, 469, 882, "Output", "ExpressionUUID" -> \
"95466ec1-2324-4083-b058-4b383bc59ba3"]
}, Open  ]]
}, Open  ]]
}
]
*)

